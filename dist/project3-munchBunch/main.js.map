{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/callback/callback.component.css","webpack:///./src/app/callback/callback.component.html","webpack:///./src/app/callback/callback.component.ts","webpack:///./src/app/consumer/common.service.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./consumer/consumer.module\": [\n\t\t\"./src/app/consumer/consumer.module.ts\",\n\t\t\"consumer-consumer-module\"\n\t],\n\t\"./owner/owner.module\": [\n\t\t\"./src/app/owner/owner.module.ts\",\n\t\t\"owner-owner-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CommonService } from './consumer/common.service';\n\nimport { AuthComponent } from './auth/auth.component';\nimport { CallbackComponent } from './callback/callback.component';\nimport { AuthService } from './auth.service';\n\n\nconst appRoutes: Routes = [\n  { path: 'consumer', loadChildren: './consumer/consumer.module#ConsumerModule' },\n  { path: 'owner', loadChildren: './owner/owner.module#OwnerModule' },\n  { path: '', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot( appRoutes, {enableTracing: true })\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"body {\\n    font-family: 'Spicy Rice', cursive;\\n}\\n\"","module.exports = \"<h1>Munch Bunch\\n\\n</h1>\\n<div class=\\\"spacer\\\"></div>\\n<div class=\\\"container\\\">\\n\\n<button routerLinkActive=\\\"active\\\" routerLink=\\\"./consumer\\\" ng-click=\\\"\\\">Consumer</button>\\n<button routerLink=\\\"/owner\\\">Owner</button>\\n\\n<button routerLink=\\\"\\\">Home</button>\\n<router-outlet></router-outlet>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n   \\n</div>\\n\\n   \"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormsModule } from '@angular/forms';\n\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { CommonService } from './consumer/common.service';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  constructor(private newService: CommonService) {}\n  Repdata;\n  valbutton = \"Save\";\n\n \n\n  \n}\n\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n//import { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\n\n\nimport { AppRoutingModule } from './app-routing.module';\n\n\nimport { CommonService } from './consumer/common.service';\n\nimport { AuthComponent } from './auth/auth.component';\nimport { CallbackComponent } from './callback/callback.component';\nimport { AuthService } from './auth.service';\nimport { MessagesComponent } from './messages/messages.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AgmCoreModule } from '@agm/core';\n\n\nimport { MapComponent } from './map/map.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    CallbackComponent,\n    MessagesComponent,\n   // HttpClientModule,\n  ],\n  imports: [\n    BrowserModule,  \n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyCX37S57WrEFKAJO02W493eHYHBQD_uTMQ'\n    }),\n    ReactiveFormsModule\n  ],\n  providers: [CommonService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n// import * as auth0 from 'auth0-js';\n\n(window as any).global = window;\n\n@Injectable()\nexport class AuthService {\n\n  // auth0 = new auth0.WebAuth({\n  //   clientID: 'c1jDrqCqe3zQjDICR41dbGZToW3GjcUl',\n  //   domain: 'munchbunch3.auth0.com',\n  //   responseType: 'token id_token',\n  //   redirectUri: 'http://localhost:3000/callback',\n  //   scope: 'openid'\n  // });\n\n  // constructor(\n  //   //   private router: Router\n  //   ) {}\n\n  // public login(): void {\n  //   this.auth0.authorize();\n  // }\n\n}","module.exports = \"\"","module.exports = \"<button class=\\\"btn btn-primary\\\" (click)=\\\"login()\\\">Tweet</button>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  callback works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.css']\n})\nexport class CallbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { MessageService } from '../message.service';\nimport { Consumer } from './consumer';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n\n})\n// CRUD for consumer accounts\n\nexport class CommonService {\n  private consumerUrl = 'api/account/consumer';\n  \n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n    ) { }\n\n    /** GET consumer from the server */\n  getconsumer (): Observable<Consumer[]> {\n    return this.http.get<Consumer[]>(this.consumerUrl)\n      .pipe(\n        tap(consumer => this.log('fetched consumer')),\n        catchError(this.handleError('getconsumer', []))\n      );\n  }\n \n  /** GET consumer by id. Return `undefined` when id not found */\n  getconsumerNo404<Data>(id: number): Observable<Consumer> {\n    const url = `${this.consumerUrl}/?id=${id}`;\n    return this.http.get<Consumer[]>(url)\n      .pipe(\n        map(consumer => consumer[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} consumer id=${id}`);\n        }),\n        catchError(this.handleError<Consumer>(`getconsumer id=${id}`))\n      );\n  }\n \n  /** GET consumer by id. Will 404 if id not found */\n  getConsumer(id: number): Observable<Consumer> {\n    const url = `${this.consumerUrl}/${id}`;\n    return this.http.get<Consumer>(url).pipe(\n      tap(_ => this.log(`fetched consumer id=${id}`)),\n      catchError(this.handleError<Consumer>(`getconsumer id=${id}`))\n    );\n  }\n \n  /* GET consumer whose name contains search term */\n  searchConsumer(term: string): Observable<Consumer[]> {\n    if (!term.trim()) {\n      // if not search term, return empty consumer array.\n      return of([]);\n    }\n    return this.http.get<Consumer[]>(`${this.consumerUrl}/?name=${term}`).pipe(\n      tap(_ => this.log(`found consumer matching \"${term}\"`)),\n      catchError(this.handleError<Consumer[]>('searchconsumer', []))\n    );\n  }\n \n  //////// Save methods //////////\n \n  /** POST: add a new consumer to the server */\n  addconsumer (consumer: Consumer): Observable<Consumer> {\n    return this.http.post<Consumer>(this.consumerUrl, consumer, httpOptions).pipe(\n      tap((consumer: Consumer) => this.log(`added consumer w/ id=${consumer.id}`)),\n      catchError(this.handleError<Consumer>('addconsumer'))\n    );\n  }\n \n  /** DELETE: delete the consumer from the server */\n  deleteconsumer (consumer: Consumer | number): Observable<Consumer> {\n    const id = typeof consumer === 'number' ? consumer : consumer.id;\n    const url = `${this.consumerUrl}/${id}`;\n \n    return this.http.delete<Consumer>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted consumer id=${id}`)),\n      catchError(this.handleError<Consumer>('deleteconsumer'))\n    );\n  }\n \n  /** PUT: update the consumer on the server */\n  updateconsumer (consumer: Consumer): Observable<any> {\n    return this.http.put(this.consumerUrl, consumer, httpOptions).pipe(\n      tap(_ => this.log(`updated consumer id=${consumer.id}`)),\n      catchError(this.handleError<any>('updateconsumer'))\n    );\n  }\n \n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n \n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n \n  /** Log a consumerService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`consumerService: ${message}`);\n  }\n\n  // saveConsumer(consumer){\n  //   return this.http.post('/api/SaveConsumer/', consumer).map((response: Response) => response.json());\n  // }\n\n  // getConsumer(){\n  //   return this.http.get('/api/getConsumer/').map((response: Response) => response.json());\n  // }\n  \n  // deleteConsumer(id){\n  //   return this.http.get('/api/deleteConsumer/', id).map((response: Response) => response.json());\n  // }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  constructor() { }\n\n  add(message: string){\n    this.messages.push(message);\n  }\n  \n  clear(){\n    this.messages = [];\n  }\n}\n\n","module.exports = \"/* MessagesComponent's private CSS styles */\\nh2 {\\n    color: red;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-weight: lighter;\\n  }\\nbody {\\n    margin: 2em;\\n  }\\nbody, input[text], button {\\n    color: crimson;\\n    font-family: Cambria, Georgia;\\n  }\\nbutton.clear {\\n    font-family: Arial;\\n    background-color: #eee;\\n    border: none;\\n    padding: 5px 10px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    cursor: hand;\\n  }\\nbutton:hover {\\n    background-color: #cfd8dc;\\n  }\\nbutton:disabled {\\n    background-color: #eee;\\n    color: #aaa;\\n    cursor: auto;\\n  }\\nbutton.clear {\\n    color: #888;\\n    margin-bottom: 12px;\\n  }\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n    <h2>Messages</h2>\\n    <button class=\\\"clear\\\"\\n            (click)=\\\"messageService.clear()\\\">clear</button>\\n    <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n  \\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}