{"version":3,"sources":["webpack:///./src/app/consumer/account/account.component.css","webpack:///./src/app/consumer/account/account.component.html","webpack:///./src/app/consumer/account/account.component.ts","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.css","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.html","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.ts","webpack:///./src/app/consumer/consumer-page/consumer-page.component.css","webpack:///./src/app/consumer/consumer-page/consumer-page.component.html","webpack:///./src/app/consumer/consumer-page/consumer-page.component.ts","webpack:///./src/app/consumer/consumer-routing.module.ts","webpack:///./src/app/consumer/consumer.module.ts","webpack:///./src/app/consumer/review/review.component.css","webpack:///./src/app/consumer/review/review.component.html","webpack:///./src/app/consumer/review/review.component.ts","webpack:///./src/app/consumer/truck-search/truck-search.component.css","webpack:///./src/app/consumer/truck-search/truck-search.component.html","webpack:///./src/app/consumer/truck-search/truck-search.component.ts","webpack:///./src/app/consumer/user-info/user-info.component.css","webpack:///./src/app/consumer/user-info/user-info.component.html","webpack:///./src/app/consumer/user-info/user-info.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/trucks/truck-detail/truck-detail.component.css","webpack:///./src/app/trucks/truck-detail/truck-detail.component.html","webpack:///./src/app/trucks/truck-detail/truck-detail.component.ts","webpack:///./src/app/trucks/truck-list/truck-list.component.css","webpack:///./src/app/trucks/truck-list/truck-list.component.html","webpack:///./src/app/trucks/truck-list/truck-list.component.ts","webpack:///./src/app/trucks/truck.ts","webpack:///./src/app/trucks/truckSearch.service.ts"],"names":[],"mappings":"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","file":"consumer-consumer-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<p>\\n  account works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Let's Eat!</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/consumer\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/account\\\">Account</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/reviews\\\">Reviews</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink= \\\"/search\\\"class=\\\"nav-link\\\" href=\\\"/truck-search\\\">Search</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <!-- <button class=\\\"btn btn-primary\\\" (click)=\\\"onLogin()\\\">Tweet</button> -->\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Tweet</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Fav Updates!</a>\\n        </li>\\n      </ul>\\n    </div>\\n    </div>\\n  </nav>\\n  <div class = \\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-consumer-navbar',\n  templateUrl: './consumer-navbar.component.html',\n  styleUrls: ['./consumer-navbar.component.css']\n})\nexport class ConsumerNavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Welcome to Munch Bunch</h2>\\n\\n<app-consumer-navbar></app-consumer-navbar>\\n\\n<!-- <div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\"> -->\\n      \\n      <app-truck-search></app-truck-search>\\n    \\n  \\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-consumer-page',\n  templateUrl: './consumer-page.component.html',\n  styleUrls: ['./consumer-page.component.css']\n})\nexport class ConsumerPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReviewComponent } from './review/review.component';\n //import { from } from 'rxjs';\nimport { TruckSearchComponent } from './truck-search/truck-search.component';\n\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { ConsumerPageComponent } from './consumer-page/consumer-page.component';\nimport { TruckDetailComponent } from '../trucks/truck-detail/truck-detail.component';\nimport { TruckListComponent } from '../trucks/truck-list/truck-list.component';\n\n\n\nconst consumerRoutes: Routes = [\n  { path: '', \n  component: ConsumerPageComponent },\n  { path: 'reviews', component: ReviewComponent },\n  { path: 'truck-search', component: TruckSearchComponent},\n  { path: 'account', component: UserInfoComponent },\n  { path: ':cuisineName', component: TruckListComponent},\n  { path: ':cuisineName/:truckId', component: TruckDetailComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(consumerRoutes)],\n  exports: [RouterModule]\n})\nexport class ConsumerRoutingModule { }\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { ConsumerRoutingModule } from './consumer-routing.module';\n\nimport { ConsumerPageComponent } from './consumer-page/consumer-page.component';\nimport { ReviewComponent } from './review/review.component';\nimport { ConsumerNavbarComponent } from './consumer-navbar/consumer-navbar.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\nimport { TruckSearchComponent } from './truck-search/truck-search.component';\n\n\nimport { AccountComponent } from './account/account.component';\n\nimport { CommonService } from './common.service';\nimport { MapComponent } from '../map/map.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { TruckListComponent } from '../trucks/truck-list/truck-list.component';\nimport { TruckDetailComponent } from '../trucks/truck-detail/truck-detail.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConsumerRoutingModule,\n    HttpClientModule,\n    HttpModule,\n    AgmCoreModule,\n    FormsModule\n  ],\n  declarations: [ConsumerPageComponent, ReviewComponent, ConsumerNavbarComponent, UserInfoComponent, TruckSearchComponent, TruckDetailComponent,  TruckListComponent, AccountComponent,\n  MapComponent ],\n  providers: [CommonService]\n})\nexport class ConsumerModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  review works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".cuisine-card {\\n    width: 150px;\\n    height: 150px;\\n    margin: 3px;\\n    border: solid 1px red;\\n    box-shadow: 0 10px 18px 0 rgba(0,0,0,0.2), 0 8px 22px 0 rgba(0,0,0,0.19);\\n    cursor: pointer;\\n}\\n.cuisine-card:hover {\\n    background-color: red;\\n    color: white;\\n}\\n.cuisine-name {\\n    text-align: center;\\n    font-size: 20px;\\n    font-size-adjust: inherit;\\n    \\n}\\n.cuisine-image {\\n    height: 100px;\\n\\n}\\n.hot {\\n    padding: 3px;\\n    font-size: 24px;\\n}\\n@media screen and (min-width: 300px) and (max-width: 600px) {\\n.cuisine-card{\\n    height: auto;\\n    width: auto;\\n}\\nimg{\\n    height: auto;\\n    width: auto;\\n    align-content: center;\\n}\\n.cuisine-name{\\n    display: none;\\n}\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12 col-md-3\\\">\\n          <h5>What's Hot</h5>\\n          <span><i class=\\\"hot text-danger fas fa-fire\\\"></i>\\n            <i class=\\\"hot text-danger fas fa-fire\\\"></i>\\n            <i class=\\\"hot text-danger fas fa-fire\\\"></i></span>\\n        </div>\\n    <div class=\\\"col-sm-12 col-md-9\\\">\\n      <h5>Search by cuisine</h5>\\n      <div class=\\\"card-deck\\\">\\n        <div *ngFor=\\\"let cuisine of cuisines\\\" class=\\\"row \\\">\\n          <div class=\\\"col-sm-4 justify-content-center\\\">\\n            <div class=\\\"card p-3 cuisine-card\\\">\\n              <a routerLink=\\\"{{cuisine.name}}\\\">\\n                <img class=\\\"card-img-top cuisine-image\\\" src=\\\"{{cuisine.imgLink}}\\\" alt=\\\"{{cuisine.name}}\\\">\\n                <div class=\\\"card-body p-0\\\">\\n                  <p class=\\\"cuisine-name\\\">{{cuisine.name}}</p>\\n                </div>\\n\\n              </a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <app-truck-list></app-truck-list>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h3>Search by Map</h3>\\n    \\n    <app-map></app-map>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OnDestroy } from '@angular/core';\nimport { ISubscription } from 'rxjs/Subscription';\n// import { Cuisine } from '../../cuisine';\n// import { CUISINES } from '../../mock-cuisines';\nimport { SearchService } from '../../trucks/truckSearch.service';\nimport { Truck } from 'src/app/trucks/truck';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-truck-search',\n  templateUrl: './truck-search.component.html',\n  styleUrls: ['./truck-search.component.css']\n})\n\n\nexport class TruckSearchComponent implements OnInit {\n\n  selectedTruck: Truck;\n\n  trucks: Truck[];\n\nconstructor(\n  private searchService: SearchService,\n  public client: HttpClient \n  ) { }\n\n   getTrucks() {\n    return this.searchService.getTrucks()\n    //.subscribe(trucks => this.trucks = trucks);\n   }\n  \n   \n  // cuisines: Cuisine[];\n\n  // getCuisines(): void {\n  //  this.searchService.getCuisines().subscribe(cuisines => this.cuisines = cuisines);\n  // }\n\n  ngOnInit() {\n    //this.getCuisines();\n    this.getTrucks();\n  }\n  onSelect(trucks: Truck): void{\n    this.selectedTruck = trucks;\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <form #userForm=\\\"ngForm\\\"   (ngSubmit)=\\\"onSave(userForm.value)\\\" novalidate>  \\n  <p>Is \\\"myForm\\\" valid? {{userForm.valid}}</p>  \\n <table>  \\n<tr>  \\n<td>name</td>  \\n<td>   \\n    <input name=\\\"id\\\" type=\\\"hidden\\\"     [(ngModel)]=\\\"id\\\" />  \\n     <input name=\\\"name\\\" type=\\\"text\\\"  required  [(ngModel)]=\\\"name\\\" />  \\n  \\n </td>  \\n</tr>  \\n  \\n<tr>  \\n    <td>address</td>  \\n    <td>    <input name=\\\"address\\\" required  type=\\\"text\\\"   [(ngModel)]=\\\"address\\\" /></td>  \\n    </tr>  \\n    <tr>  \\n        <td colspan=\\\"2\\\">  \\n    <input type=\\\"submit\\\" value=\\\"{{valbutton}}\\\" />  \\n    </td>  \\n    </tr>  \\n </table>  \\n</form>   \\n  \\n<table border='1'>  \\n  \\n  <tr>  \\n    <td>Id</td>  \\n    <td>Name</td>  \\n    <td>Address</td>  \\n    <td>Edit</td>  \\n    <td>Delete</td>  \\n  </tr>  \\n  <tr *ngFor=\\\"let kk of Repdata;let ind = index\\\">  \\n       \\n    <td>{{ind + 1}}</td>  \\n    <td>{{kk.name}}</td>  \\n    <td>{{kk.address}}</td>  \\n    <td><a (click)=\\\"edit(kk)\\\" style=\\\"color:blueviolet\\\">Edit</a></td>  \\n    <td><a (click)=\\\"delete(kk._id)\\\" style=\\\"color:blueviolet\\\">Delete</a>  </td>  \\n  </tr>  \\n</table>   -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nimport { FormGroup, FormControl, Validators, FormsModule } from '@angular/forms';\n\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\n\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css']\n})\nexport class UserInfoComponent implements OnInit {\n\n  constructor(private newService: CommonService){ }\n  Repdata;\n  valbutton = \"Save\";\n\n  ngOnInit() {\n  //   this.newService.getConsumer().subscribe(data => this.Repdata = data)\n  // }\n  // onSave = function(consumer, isValid: boolean) {\n  //   consumer.mode = this.valbutton;\n  //   this.newService.saveConsumer(consumer).subscribe(data => { alert(data.data);\n  //   this.ngOnInit();\n  //   },\n  //   error => this.errorMessage = error)\n  // }\n  // edit = function (kk) {\n  //   this.id = kk._id;\n  //   this.name = kk.name;\n  //   this.address = kk.address;\n  //   this.valbutton = \"Update\";\n  // }\n  // delete = function(id) {\n  //   this.newService.deleteConsumer(id).subscribe(data => { alert(data.data); this.ngOnInit();}, error => this.errorMessage = error)\n  }\n}\n","module.exports = \"agm-map {\\n    height: 500px;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n\\n\\n  <agm-map [latitude]=\\\"lat\\\" \\n  [longitude]=\\\"lng\\\" \\n  [zoom] =\\\"zoom\\\" \\n  [disableDefaultUI]=\\\"false\\\" \\n  [zoomControl]=\\\"false\\\"\\n  (mapClick)=\\\"OnChoseLocation($event)\\\">\\n\\n  <agm-marker *ngFor= \\\"let m of markers; let i = index\\\"\\n  [latitude]=\\\"lat\\\" \\n  [longitude]=\\\"lng\\\"\\n  [markerDraggable]=\\\"m.draggable\\\"\\n  (dragEnd)=\\\"markerDraggable(m,event)\\\">\\n  \\n  <agm-info-window>Information when you click the pin</agm-info-window></agm-marker>\\n      \\n  </agm-map>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\ninterface marker {\n\tlat: number;\n\tlng: number;\n\tlabel?: string;\n\tdraggable: boolean;\n}\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  zoom: number = 12;\n\n  lat: number = 39.6768129;\n  lng: number = -104.9578801;\n\n  clickedMarker(label: string, index: number) {\n    console.log(`clicked the marker: ${label || index}`)\n  }\n\n  OnChoseLocation(event){\n    this.lat = event.coords.lat;\n    this.lng = event.coords.lng;\n    console.log(\"lat\" , event.coords.lat);\n    console.log(\"lng\" , event.coords.lng);\n  \n  }\n\n  mapClicked(event ) {\n    this.markers.push({\n      lat: event.coords.lat,\n      lng: event.coords.lng,\n      draggable: true\n    });\n  }\n\n  markerDragEnd(m: marker, event) {\n    console.log('dragEnd', m, event);\n  }\n\n  markers: marker[] =[\n      {\n        lat: 39.6768129,\n        lng: -104.9578801,\n        label: 'A',\n        draggable: true\n      }\n  ]\n \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"truck\\\" class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h2 *ngIf=\\\"truck._id\\\">Truck Details</h2>\\n    <h2 *ngIf=\\\"!truck._id\\\">New Truck</h2>\\n  </div>\\n</div>\\n<div *ngIf=\\\"truck\\\" class=\\\"row\\\">\\n  <form class=\\\"col-md-12\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-name\\\">Name</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-name\\\" [(ngModel)]=\\\"truck.name\\\" placeholder=\\\"Name\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-imgLink\\\">Image</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-imgLink\\\" [(ngModel)]=\\\"truck.truck-imgLink\\\" placeholder=\\\"image\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-cuisine\\\">Cuisine</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-cuisine\\\" [(ngModel)]=\\\"truck.cuisine\\\" placeholder=\\\"cuisine\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-description\\\">Brief Description</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-description\\\" [(ngModel)]=\\\"truck.description\\\" placeholder=\\\"description\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-menuLink\\\">Menu</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-menuLink\\\" [(ngModel)]=\\\"truck.menuLink\\\" placeholder=\\\"menu\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-price\\\">Price</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-price\\\" [(ngModel)]=\\\"truck.price\\\" placeholder=\\\"$$$\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-latitude\\\">Latitude</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-latitude\\\" [(ngModel)]=\\\"truck.latitude\\\" placeholder=\\\"latitude\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-longitude\\\">Longitude</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-longitude\\\" [(ngModel)]=\\\"truck.longitude\\\" placeholder=\\\"longitude\\\"/>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!truck._id\\\" (click)=\\\"createtruck(truck)\\\">Create</button>\\n    <button class=\\\"btn btn-info\\\" *ngIf=\\\"truck._id\\\" (click)=\\\"updatetruck(truck)\\\">Update</button>\\n    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"truck._id\\\" (click)=\\\"deletetruck(truck._id)\\\">Delete</button>\\n  </form>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Truck } from '../truck';\nimport { SearchService } from 'src/app/trucks/truckSearch.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-truck-detail',\n  templateUrl: './truck-detail.component.html',\n  styleUrls: ['./truck-detail.component.css']\n})\nexport class TruckDetailComponent implements OnInit {\n  @Input()\n  truck: Truck;\n\n  @Input()\n  createHandler: Function;\n  @Input()\n  updateHandler: Function;\n  @Input()\n  deleteHandler: Function;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private searchService: SearchService\n  ) { }\n\n  createTruck(truck: Truck) {\n    this.searchService.createTruck(truck).then((newTruck: Truck) => {\n      this.createHandler(newTruck);\n    });\n  }\n\n  updateTruck(truck: Truck): void {\n    this.searchService.updateTruck(truck).then((updatedTruck: Truck) => {\n      this.updateHandler(updatedTruck);\n    });\n  }\n\n  deleteTruck(TruckId: String): void {\n    this.searchService.deleteTruck(TruckId).then((deletedTruckId: String) => {\n      this.deleteHandler(deletedTruckId);\n    });\n  }\n\n  ngOnInit() {\n    \n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <h2>trucks</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\"\\n        *ngFor=\\\"let truck of trucks\\\"\\n        (click)=\\\"selectTruck(truck)\\\"\\n        [class.active]=\\\"truck === selectedTruck\\\">\\n        {{truck.name}}\\n      </li>\\n    </ul>\\n    <button class=\\\"btn btn-warning\\\" (click)=\\\"createNewTruck()\\\">New</button>\\n  </div>\\n  <div class=\\\"col-md-5 col-md-offset-2\\\">\\n    <!-- <truck-details\\n      [truck]=\\\"selectedTruck\\\"\\n      [createHandler]=\\\"addTruck\\\"\\n      [updateHandler]=\\\"updateTruck\\\"\\n      [deleteHandler]=\\\"deleteTruck\\\">\\n    </truck-details> -->\\n  </div>\\n</div>\\n\\n    \\n    <!-- <div class=\\\"container\\\">\\n        <div class=\\\"card-deck\\\"> -->\\n          <!-- ngonit for gettrucks() -->\\n            <!-- <div *ngFor=\\\"let truck of trucks\\\" class=\\\"row \\\">\\n              <div class=\\\"col-sm-4 justify-content-center\\\">\\n                <div class=\\\"card p-3 truck-card\\\">\\n                  <a routerLink=\\\"{{cuisine.name}}/{{truck.id}}\\\">\\n                  <img class=\\\"card-img-top truck-image\\\" src=\\\"{{truck.imgLink}}\\\" alt=\\\"{{truck.name}}\\\">\\n                  <div class=\\\"card-body p-0\\\">\\n                    <p class=\\\"text-center font-weight-bold\\\">{{truck.name}}\\n                      <br>\\n                      {{truck.price}}\\n                      <br>\\n                      <a href=\\\"{{truck.menuLink}}\\\">Website</a>\\n                    </p>\\n                  </div>\\n          \\n                  </a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div> -->\"","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Truck } from 'src/app/trucks/truck';\nimport { SearchService } from 'src/app/trucks/truckSearch.service';\n//import { TruckDetailComponent } from '../trucks/truck-detail/truck-detail.component';\n\n@Component({\n  selector: 'app-truck-list',\n  templateUrl: './truck-list.component.html',\n  styleUrls: ['./truck-list.component.css'],\n  providers: [SearchService]\n})\nexport class TruckListComponent implements OnInit {\n\n  trucks: Truck[];\n  selectedTruck: Truck;\n\n \n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private searchService: SearchService\n  ) { }\n\n  // getTrucks(): void {\n  //   this.searchService.getTrucks().subscribe(trucks => this.trucks = trucks);\n  // }\n  ngOnInit() {\n  // this.getTrucks();\n  this.searchService\n  .getTrucks()\n  .then((trucks: Truck[]) => {\n    this.trucks = trucks.map((truck) => {\n      if (!truck.location) {\n        truck.location = {\n          latitude: 39.7392,\n          longitude: 104.9903\n        }\n      }\n      return truck;\n    });\n  });\n  }\n  private getIndexOfTruck = (truckId: String) => {\n    return this.trucks.findIndex((truck) => {\n      return truck._id === truckId;\n    });\n  }\n\n  selectTruck(truck: Truck) {\n    this.selectedTruck = truck\n  }\n\n  createNewtruck() {\n    var truck: Truck = {\n\n      name: '',\n      imgLink: '',\n      cuisine: '',\n      description: '',\n      menuLink: '',\n      price: '',\n      location: {\n        latitude: 0,\n        longitude: 0\n    }\n    };\n\n    // By default, a newly-created truck will have the selected state.\n    this.selectTruck(truck);\n  }\n\n  deletetruck = (truckId: String) => {\n    var idx = this.getIndexOfTruck(truckId);\n    if (idx !== -1) {\n      this.trucks.splice(idx, 1);\n      this.selectTruck(null);\n    }\n    return this.trucks;\n  }\n\n  addtruck = (truck: Truck) => {\n    this.trucks.push(truck);\n    this.selectTruck(truck);\n    return this.trucks;\n  }\n\n  updatetruck = (truck: Truck) => {\n    var idx = this.getIndexOfTruck(truck._id);\n    if (idx !== -1) {\n      this.trucks[idx] = truck;\n      this.selectTruck(truck);\n    }\n    return this.trucks;\n  }\n\n}\n","export class Truck {\n    _id?: string;\n    name: string;\n    imgLink: string;\n    cuisine: string;\n    description: string;\n    menuLink: string;\n    price: string;\n    location: {\n        latitude: number;\n        longitude: number\n    }\n};","import { Injectable } from '@angular/core';\n//import { Truck } from './truck';\nimport { Http, Response } from '@angular/http';\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\n\n\nimport { Observable, of} from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nimport { MessageService } from '../message.service';\n\nimport { Cuisine } from '../cuisine';\nimport { CUISINES } from '../mock-cuisines';\nimport { Truck } from './truck';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  \n  private trucksUrl = '/api/trucks';\n  \n  constructor(\n    private http: Http,\n    private messageService: MessageService\n    ) { };\n\n// get(\"/api/Trucks\")\ngetTrucks(): Promise<void | Truck[]> {\n  return this.http.get(this.trucksUrl)\n             .toPromise()\n             .then(response => response.json() as Truck[])\n             .catch(this.handleError);\n}\n\n// post(\"/api/Trucks\")\ncreateTruck(newTruck: Truck): Promise<void | Truck> {\n  return this.http.post(this.trucksUrl, newTruck)\n             .toPromise()\n             .then(response => response.json() as Truck)\n             .catch(this.handleError);\n}\n\n\n// delete(\"/api/Trucks/:id\")\ndeleteTruck(delTruckId: String): Promise<void | String> {\n  return this.http.delete(this.trucksUrl + '/' + delTruckId)\n             .toPromise()\n             .then(response => response.json() as String)\n             .catch(this.handleError);\n}\n\n// put(\"/api/Trucks/:id\")\nupdateTruck(putTruck: Truck): Promise<void | Truck> {\n  var putUrl = this.trucksUrl + '/' + putTruck._id;\n  return this.http.put(putUrl, putTruck)\n             .toPromise()\n             .then(response => response.json() as Truck)\n             .catch(this.handleError);\n}\n\nprivate handleError (error: any) {\n  let errMsg = (error.message) ? error.message :\n  error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n  console.error(errMsg); // log to console instead\n}\n}\n\n// getCuisines(): Observable<Cuisine[]> {\n//   return of (CUISINES);\n// }\n// getCuisine(id: number):\n// Observable<Cuisine> {\n//   return of (CUISINES.find(cuisine => cuisine.id === id));\n// }\n\n\n\n  /** GET trucks from the server */\n  // getTrucks (): Observable<Truck[]> {\n  //   return this.http.get<Truck[]>(this.trucksUrl)\n  //     .pipe(\n  //       tap(trucks => this.log('fetched trucks')),\n  //       catchError(this.handleError('gettrucks', []))\n  //     );\n  // }\n \n  /** GET Truck by id. Return `undefined` when id not found */\n  // getTruckNo404<Data>(id: number): Observable<Truck> {\n  //   const url = `${this.trucksUrl}/?id=${id}`;\n  //   return this.http.get<Truck[]>(url)\n  //     .pipe(\n  //       map(trucks => trucks[0]), // returns a {0|1} element array\n  //       tap(h => {\n  //         const outcome = h ? `fetched` : `did not find`;\n  //         this.log(`${outcome} Truck id=${id}`);\n  //       }),\n  //       catchError(this.handleError<Truck>(`getTruck id=${id}`))\n  //     );\n  // }\n \n  // /** GET Truck by id. Will 404 if id not found */\n  // getTruck(id: number): Observable<Truck> {\n  //   const url = `${this.trucksUrl}/${id}`;\n  //   return this.http.get<Truck>(url).pipe(\n  //     tap(_ => this.log(`fetched Truck id=${id}`)),\n  //     catchError(this.handleError<Truck>(`getTruck id=${id}`))\n  //   );\n  // }\n \n  // /* GET trucks whose name contains search term */\n  // searchtrucks(term: string): Observable<Truck[]> {\n  //   if (!term.trim()) {\n  //     // if not search term, return empty Truck array.\n  //     return of([]);\n  //   }\n  //   return this.http.get<Truck[]>(`${this.trucksUrl}/?name=${term}`).pipe(\n  //     tap(_ => this.log(`found trucks matching \"${term}\"`)),\n  //     catchError(this.handleError<Truck[]>('searchtrucks', []))\n  //   );\n  // }\n \n  // //////// Save methods //////////\n \n  // /** POST: add a new Truck to the server */\n  // addTruck (Truck: Truck): Observable<Truck> {\n  //   return this.http.post<Truck>(this.trucksUrl, Truck, httpOptions).pipe(\n  //     tap((Truck: Truck) => this.log(`added Truck w/ id=${Truck.id}`)),\n  //     catchError(this.handleError<Truck>('addTruck'))\n  //   );\n  // }\n \n  // /** DELETE: delete the Truck from the server */\n  // deleteTruck (Truck: Truck | number): Observable<Truck> {\n  //   const id = typeof Truck === 'number' ? Truck : Truck.id;\n  //   const url = `${this.trucksUrl}/${id}`;\n \n  //   return this.http.delete<Truck>(url, httpOptions).pipe(\n  //     tap(_ => this.log(`deleted Truck id=${id}`)),\n  //     catchError(this.handleError<Truck>('deleteTruck'))\n  //   );\n  // }\n \n  // /** PUT: update the Truck on the server */\n  // updateTruck (Truck: Truck): Observable<any> {\n  //   return this.http.put(this.trucksUrl, Truck, httpOptions).pipe(\n  //     tap(_ => this.log(`updated Truck id=${Truck.id}`)),\n  //     catchError(this.handleError<any>('updateTruck'))\n  //   );\n  // }\n \n  // /**\n  //  * Handle Http operation that failed.\n  //  * Let the app continue.\n  //  * @param operation - name of the operation that failed\n  //  * @param result - optional value to return as the observable result\n  //  */\n  // private handleError<T> (operation = 'operation', result?: T) {\n  //   return (error: any): Observable<T> => {\n \n  //     // TODO: send the error to remote logging infrastructure\n  //     console.error(error); // log to console instead\n \n  //     // TODO: better job of transforming error for user consumption\n  //     this.log(`${operation} failed: ${error.message}`);\n \n  //     // Let the app keep running by returning an empty result.\n  //     return of(result as T);\n  //   };\n  // }\n \n  // /** Log a TruckService message with the MessageService */\n  // private log(message: string) {\n  //   this.messageService.add(`TruckService: ${message}`);\n  // }\n\n \n  // getTrucks(): Observable<Truck[]> {\n  //   return this.http.get<Truck[]>(\n  //     this.trucksUrl, { observe: 'response'}\n  //   );\n\n  //   return of (TRUCKS);\n  // }\n  // getTruck(id: number): Observable<Truck>{\n  //   return of (TRUCKS.find(truck => truck.id === id));\n  // }\n\n  \n//}\n"],"sourceRoot":""}