<<<<<<< Updated upstream
{"version":3,"sources":["webpack:///./src/app/consumer/account/account.component.css","webpack:///./src/app/consumer/account/account.component.html","webpack:///./src/app/consumer/account/account.component.ts","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.css","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.html","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.ts","webpack:///./src/app/consumer/consumer-page/consumer-page.component.css","webpack:///./src/app/consumer/consumer-page/consumer-page.component.html","webpack:///./src/app/consumer/consumer-page/consumer-page.component.ts","webpack:///./src/app/consumer/consumer-routing.module.ts","webpack:///./src/app/consumer/consumer.module.ts","webpack:///./src/app/consumer/review/review.component.css","webpack:///./src/app/consumer/review/review.component.html","webpack:///./src/app/consumer/review/review.component.ts","webpack:///./src/app/consumer/truck-search/truck-search.component.css","webpack:///./src/app/consumer/truck-search/truck-search.component.html","webpack:///./src/app/consumer/truck-search/truck-search.component.ts","webpack:///./src/app/consumer/user-info/user-info.component.css","webpack:///./src/app/consumer/user-info/user-info.component.html","webpack:///./src/app/consumer/user-info/user-info.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/trucks/truck-detail/truck-detail.component.css","webpack:///./src/app/trucks/truck-detail/truck-detail.component.html","webpack:///./src/app/trucks/truck-detail/truck-detail.component.ts","webpack:///./src/app/trucks/truck-list/truck-list.component.css","webpack:///./src/app/trucks/truck-list/truck-list.component.html","webpack:///./src/app/trucks/truck-list/truck-list.component.ts","webpack:///./src/app/trucks/truck.ts","webpack:///./src/app/trucks/truckSearch.service.ts"],"names":[],"mappings":"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","file":"consumer-consumer-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<p>\\n  account works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Let's Eat!</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a routerLink=\\\"/consumer\\\" class=\\\"nav-link\\\" href=\\\"/consumer\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink= \\\"/account\\\" class=\\\"nav-link\\\" href=\\\"/account\\\">Account</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/reviews\\\" class=\\\"nav-link\\\"  href=\\\"/review\\\">Reviews</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink= \\\"/search\\\" class=\\\"nav-link\\\" href=\\\"/truck-search\\\">Search</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <!-- <button class=\\\"btn btn-primary\\\" (click)=\\\"onLogin()\\\">Tweet</button> -->\\n          <a routerLink=\\\"/tweet\\\" class=\\\"nav-link\\\" href=\\\"/\\\">Tweet</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Fav Updates!</a>\\n        </li>\\n      </ul>\\n    </div>\\n    </div>\\n  </nav>\\n  <div class = \\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-consumer-navbar',\n  templateUrl: './consumer-navbar.component.html',\n  styleUrls: ['./consumer-navbar.component.css']\n})\nexport class ConsumerNavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Welcome to Munch Bunch</h2>\\n\\n<app-consumer-navbar></app-consumer-navbar>\\n<div class=\\\"container bg-light\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <h5>What's Hot</h5>\\n          <span><i class=\\\"hot text-danger fas fa-fire\\\"></i>\\n            <i class=\\\"hot text-danger fas fa-fire\\\"></i>\\n            <i class=\\\"hot text-danger fas fa-fire\\\"></i></span>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <button class=\\\"btn btn-success\\\">Search for Food</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <button class=\\\"btn btn-primary\\\">Tweet</button>\\n    </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <button class=\\\"btn btn-warning\\\">Find Your Friends</button>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\\n      \\n      <app-truck-search></app-truck-search>\\n    \\n  \\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-consumer-page',\n  templateUrl: './consumer-page.component.html',\n  styleUrls: ['./consumer-page.component.css']\n})\nexport class ConsumerPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReviewComponent } from './review/review.component';\n //import { from } from 'rxjs';\nimport { TruckSearchComponent } from './truck-search/truck-search.component';\n\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { ConsumerPageComponent } from './consumer-page/consumer-page.component';\nimport { TruckDetailComponent } from '../trucks/truck-detail/truck-detail.component';\nimport { TruckListComponent } from '../trucks/truck-list/truck-list.component';\n\n\n\nconst consumerRoutes: Routes = [\n  { path: '', pathMatch: 'full',\n  component: ConsumerPageComponent },\n  { path: 'reviews', component: ReviewComponent },\n  { path: 'truck-search', component: TruckSearchComponent},\n  { path: 'account', component: UserInfoComponent },\n  { path: ':cuisineName', component: TruckListComponent},\n  { path: ':cuisineName/:truckId', component: TruckDetailComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(consumerRoutes)],\n  exports: [RouterModule]\n})\nexport class ConsumerRoutingModule { }\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { ConsumerRoutingModule } from './consumer-routing.module';\n\nimport { ConsumerPageComponent } from './consumer-page/consumer-page.component';\nimport { ReviewComponent } from './review/review.component';\nimport { ConsumerNavbarComponent } from './consumer-navbar/consumer-navbar.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\nimport { TruckSearchComponent } from './truck-search/truck-search.component';\n\n\nimport { AccountComponent } from './account/account.component';\n\nimport { CommonService } from './common.service';\nimport { MapComponent } from '../map/map.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { TruckListComponent } from '../trucks/truck-list/truck-list.component';\nimport { TruckDetailComponent } from '../trucks/truck-detail/truck-detail.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConsumerRoutingModule,\n    HttpClientModule,\n    HttpModule,\n    AgmCoreModule,\n    FormsModule\n  ],\n  declarations: [\n    ConsumerPageComponent, ReviewComponent, ConsumerNavbarComponent, UserInfoComponent, TruckSearchComponent, TruckDetailComponent,  TruckListComponent, AccountComponent,\n  MapComponent \n],\n  providers: [CommonService]\n})\nexport class ConsumerModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  review works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".cuisine-card {\\n    width: 150px;\\n    height: 150px;\\n    margin: 3px;\\n    border: solid 1px red;\\n    box-shadow: 0 10px 18px 0 rgba(0,0,0,0.2), 0 8px 22px 0 rgba(0,0,0,0.19);\\n    cursor: pointer;\\n}\\n.cuisine-card:hover {\\n    background-color: red;\\n    color: white;\\n}\\n.cuisine-name {\\n    text-align: center;\\n    font-size: 20px;\\n    font-size-adjust: inherit;\\n    \\n}\\n.cuisine-image {\\n    height: 100px;\\n\\n}\\n.hot {\\n    padding: 3px;\\n    font-size: 24px;\\n}\\n@media screen and (min-width: 300px) and (max-width: 600px) {\\n.cuisine-card{\\n    height: auto;\\n    width: auto;\\n}\\nimg{\\n    height: auto;\\n    width: auto;\\n    align-content: center;\\n}\\n.cuisine-name{\\n    display: none;\\n}\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      \\n    <div class=\\\"col-sm-12 col-md-9\\\">\\n      <h5>Search by cuisine</h5>\\n      <div class=\\\"card-deck\\\">\\n        <div *ngFor=\\\"let cuisine of cuisines\\\" class=\\\"row \\\">\\n          <div class=\\\"col-sm-4 justify-content-center\\\">\\n            <div class=\\\"card p-3 cuisine-card\\\">\\n              <a routerLink=\\\"{{cuisine.name}}\\\">\\n                <img class=\\\"card-img-top cuisine-image\\\" src=\\\"{{cuisine.imgLink}}\\\" alt=\\\"{{cuisine.name}}\\\">\\n                <div class=\\\"card-body p-0\\\">\\n                  <p class=\\\"cuisine-name\\\">{{cuisine.name}}</p>\\n                </div>\\n\\n              </a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <app-truck-list></app-truck-list>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h3>Search by Map</h3>\\n    \\n    <app-map></app-map>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OnDestroy } from '@angular/core';\nimport { ISubscription } from 'rxjs/Subscription';\n// import { Cuisine } from '../../cuisine';\n// import { CUISINES } from '../../mock-cuisines';\nimport { SearchService } from '../../trucks/truckSearch.service';\nimport { Truck } from 'src/app/trucks/truck';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-truck-search',\n  templateUrl: './truck-search.component.html',\n  styleUrls: ['./truck-search.component.css']\n})\n\n\nexport class TruckSearchComponent implements OnInit {\n\n  selectedTruck: Truck;\n\n  trucks: Truck[];\n\nconstructor(\n  private searchService: SearchService,\n  public client: HttpClient \n  ) { }\n\n   getTrucks() {\n    return this.searchService.getTrucks()\n    //.subscribe(trucks => this.trucks = trucks);\n   }\n  \n   \n  // cuisines: Cuisine[];\n\n  // getCuisines(): void {\n  //  this.searchService.getCuisines().subscribe(cuisines => this.cuisines = cuisines);\n  // }\n\n  ngOnInit() {\n    //this.getCuisines();\n    this.getTrucks();\n  }\n  onSelect(trucks: Truck): void{\n    this.selectedTruck = trucks;\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <form #userForm=\\\"ngForm\\\"   (ngSubmit)=\\\"onSave(userForm.value)\\\" novalidate>  \\n  <p>Is \\\"myForm\\\" valid? {{userForm.valid}}</p>  \\n <table>  \\n<tr>  \\n<td>name</td>  \\n<td>   \\n    <input name=\\\"id\\\" type=\\\"hidden\\\"     [(ngModel)]=\\\"id\\\" />  \\n     <input name=\\\"name\\\" type=\\\"text\\\"  required  [(ngModel)]=\\\"name\\\" />  \\n  \\n </td>  \\n</tr>  \\n  \\n<tr>  \\n    <td>address</td>  \\n    <td>    <input name=\\\"address\\\" required  type=\\\"text\\\"   [(ngModel)]=\\\"address\\\" /></td>  \\n    </tr>  \\n    <tr>  \\n        <td colspan=\\\"2\\\">  \\n    <input type=\\\"submit\\\" value=\\\"{{valbutton}}\\\" />  \\n    </td>  \\n    </tr>  \\n </table>  \\n</form>   \\n  \\n<table border='1'>  \\n  \\n  <tr>  \\n    <td>Id</td>  \\n    <td>Name</td>  \\n    <td>Address</td>  \\n    <td>Edit</td>  \\n    <td>Delete</td>  \\n  </tr>  \\n  <tr *ngFor=\\\"let kk of Repdata;let ind = index\\\">  \\n       \\n    <td>{{ind + 1}}</td>  \\n    <td>{{kk.name}}</td>  \\n    <td>{{kk.address}}</td>  \\n    <td><a (click)=\\\"edit(kk)\\\" style=\\\"color:blueviolet\\\">Edit</a></td>  \\n    <td><a (click)=\\\"delete(kk._id)\\\" style=\\\"color:blueviolet\\\">Delete</a>  </td>  \\n  </tr>  \\n</table>   -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nimport { FormGroup, FormControl, Validators, FormsModule } from '@angular/forms';\n\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\n\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css']\n})\nexport class UserInfoComponent implements OnInit {\n\n  constructor(private newService: CommonService){ }\n  Repdata;\n  valbutton = \"Save\";\n\n  ngOnInit() {\n  //   this.newService.getConsumer().subscribe(data => this.Repdata = data)\n  // }\n  // onSave = function(consumer, isValid: boolean) {\n  //   consumer.mode = this.valbutton;\n  //   this.newService.saveConsumer(consumer).subscribe(data => { alert(data.data);\n  //   this.ngOnInit();\n  //   },\n  //   error => this.errorMessage = error)\n  // }\n  // edit = function (kk) {\n  //   this.id = kk._id;\n  //   this.name = kk.name;\n  //   this.address = kk.address;\n  //   this.valbutton = \"Update\";\n  // }\n  // delete = function(id) {\n  //   this.newService.deleteConsumer(id).subscribe(data => { alert(data.data); this.ngOnInit();}, error => this.errorMessage = error)\n  }\n}\n","module.exports = \"agm-map {\\n    height: 500px;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n\\n\\n  <agm-map [latitude]=\\\"lat\\\" \\n  [longitude]=\\\"lng\\\" \\n  [zoom] =\\\"zoom\\\" \\n  [disableDefaultUI]=\\\"false\\\" \\n  [zoomControl]=\\\"false\\\"\\n  (mapClick)=\\\"OnChoseLocation($event)\\\">\\n\\n  <agm-marker *ngFor= \\\"let m of markers; let i = index\\\"\\n  [latitude]=\\\"lat\\\" \\n  [longitude]=\\\"lng\\\"\\n  [markerDraggable]=\\\"m.draggable\\\"\\n  (dragEnd)=\\\"markerDraggable(m,event)\\\">\\n  \\n  <agm-info-window>Information when you click the pin</agm-info-window></agm-marker>\\n      \\n  </agm-map>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\ninterface marker {\n\tlat: number;\n\tlng: number;\n\tlabel?: string;\n\tdraggable: boolean;\n}\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  zoom: number = 12;\n\n  lat: number = 39.6768129;\n  lng: number = -104.9578801;\n\n  clickedMarker(label: string, index: number) {\n    console.log(`clicked the marker: ${label || index}`)\n  }\n\n  OnChoseLocation(event){\n    this.lat = event.coords.lat;\n    this.lng = event.coords.lng;\n    console.log(\"lat\" , event.coords.lat);\n    console.log(\"lng\" , event.coords.lng);\n  \n  }\n\n  mapClicked(event ) {\n    this.markers.push({\n      lat: event.coords.lat,\n      lng: event.coords.lng,\n      draggable: true\n    });\n  }\n\n  markerDragEnd(m: marker, event) {\n    console.log('dragEnd', m, event);\n  }\n\n  markers: marker[] =[\n      {\n        lat: 39.6768129,\n        lng: -104.9578801,\n        label: 'A',\n        draggable: true\n      }\n  ]\n \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"truck\\\" class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h2 *ngIf=\\\"truck._id\\\">Truck Details</h2>\\n    <h2 *ngIf=\\\"!truck._id\\\">New Truck</h2>\\n  </div>\\n</div>\\n<div *ngIf=\\\"truck\\\" class=\\\"row\\\">\\n  <form class=\\\"col-md-12\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-name\\\">Name</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-name\\\" [(ngModel)]=\\\"truck.name\\\" placeholder=\\\"Name\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-imgLink\\\">Image</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-imgLink\\\" [(ngModel)]=\\\"truck.truck-imgLink\\\" placeholder=\\\"image\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-cuisine\\\">Cuisine</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-cuisine\\\" [(ngModel)]=\\\"truck.cuisine\\\" placeholder=\\\"cuisine\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-description\\\">Brief Description</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-description\\\" [(ngModel)]=\\\"truck.description\\\" placeholder=\\\"description\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-menuLink\\\">Menu</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-menuLink\\\" [(ngModel)]=\\\"truck.menuLink\\\" placeholder=\\\"menu\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-price\\\">Price</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-price\\\" [(ngModel)]=\\\"truck.price\\\" placeholder=\\\"$$$\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-latitude\\\">Latitude</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-latitude\\\" [(ngModel)]=\\\"truck.latitude\\\" placeholder=\\\"latitude\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"truck-longitude\\\">Longitude</label>\\n      <input class=\\\"form-control\\\" name=\\\"truck-longitude\\\" [(ngModel)]=\\\"truck.longitude\\\" placeholder=\\\"longitude\\\"/>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!truck._id\\\" (click)=\\\"createtruck(truck)\\\">Create</button>\\n    <button class=\\\"btn btn-info\\\" *ngIf=\\\"truck._id\\\" (click)=\\\"updatetruck(truck)\\\">Update</button>\\n    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"truck._id\\\" (click)=\\\"deletetruck(truck._id)\\\">Delete</button>\\n  </form>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Truck } from '../truck';\nimport { SearchService } from 'src/app/trucks/truckSearch.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-truck-detail',\n  templateUrl: './truck-detail.component.html',\n  styleUrls: ['./truck-detail.component.css']\n})\nexport class TruckDetailComponent implements OnInit {\n  @Input()\n  truck: Truck;\n\n  @Input()\n  createHandler: Function;\n  @Input()\n  updateHandler: Function;\n  @Input()\n  deleteHandler: Function;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private searchService: SearchService\n  ) { }\n\n  createTruck(truck: Truck) {\n    this.searchService.createTruck(truck).then((newTruck: Truck) => {\n      this.createHandler(newTruck);\n    });\n  }\n\n  updateTruck(truck: Truck): void {\n    this.searchService.updateTruck(truck).then((updatedTruck: Truck) => {\n      this.updateHandler(updatedTruck);\n    });\n  }\n\n  deleteTruck(TruckId: String): void {\n    this.searchService.deleteTruck(TruckId).then((deletedTruckId: String) => {\n      this.deleteHandler(deletedTruckId);\n    });\n  }\n\n  ngOnInit() {\n    \n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <h2>trucks</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\"\\n        *ngFor=\\\"let truck of trucks\\\"\\n        (click)=\\\"selectTruck(truck)\\\"\\n        [class.active]=\\\"truck === selectedTruck\\\">\\n        {{truck.name}}\\n      </li>\\n    </ul>\\n    <button class=\\\"btn btn-warning\\\" (click)=\\\"createNewTruck()\\\">New</button>\\n  </div>\\n  <div class=\\\"col-md-5 col-md-offset-2\\\">\\n    <!-- <truck-details\\n      [truck]=\\\"selectedTruck\\\"\\n      [createHandler]=\\\"addTruck\\\"\\n      [updateHandler]=\\\"updateTruck\\\"\\n      [deleteHandler]=\\\"deleteTruck\\\">\\n    </truck-details> -->\\n  </div>\\n</div>\\n\\n    \\n    <!-- <div class=\\\"container\\\">\\n        <div class=\\\"card-deck\\\"> -->\\n          <!-- ngonit for gettrucks() -->\\n            <!-- <div *ngFor=\\\"let truck of trucks\\\" class=\\\"row \\\">\\n              <div class=\\\"col-sm-4 justify-content-center\\\">\\n                <div class=\\\"card p-3 truck-card\\\">\\n                  <a routerLink=\\\"{{cuisine.name}}/{{truck.id}}\\\">\\n                  <img class=\\\"card-img-top truck-image\\\" src=\\\"{{truck.imgLink}}\\\" alt=\\\"{{truck.name}}\\\">\\n                  <div class=\\\"card-body p-0\\\">\\n                    <p class=\\\"text-center font-weight-bold\\\">{{truck.name}}\\n                      <br>\\n                      {{truck.price}}\\n                      <br>\\n                      <a href=\\\"{{truck.menuLink}}\\\">Website</a>\\n                    </p>\\n                  </div>\\n          \\n                  </a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div> -->\"","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Truck } from 'src/app/trucks/truck';\nimport { SearchService } from 'src/app/trucks/truckSearch.service';\n//import { TruckDetailComponent } from '../trucks/truck-detail/truck-detail.component';\n\n@Component({\n  selector: 'app-truck-list',\n  templateUrl: './truck-list.component.html',\n  styleUrls: ['./truck-list.component.css'],\n  providers: [SearchService]\n})\nexport class TruckListComponent implements OnInit {\n\n  trucks: Truck[];\n  selectedTruck: Truck;\n\n \n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private searchService: SearchService\n  ) { }\n\n  // getTrucks(): void {\n  //   this.searchService.getTrucks().subscribe(trucks => this.trucks = trucks);\n  // }\n  ngOnInit() {\n  // this.getTrucks();\n  this.searchService\n  .getTrucks()\n  .then((trucks: Truck[]) => {\n    this.trucks = trucks.map((truck) => {\n      if (!truck.location) {\n        truck.location = {\n          latitude: 39.7392,\n          longitude: 104.9903\n        }\n      }\n      return truck;\n    });\n  });\n  }\n  private getIndexOfTruck = (truckId: String) => {\n    return this.trucks.findIndex((truck) => {\n      return truck._id === truckId;\n    });\n  }\n\n  selectTruck(truck: Truck) {\n    this.selectedTruck = truck\n  }\n\n  createNewtruck() {\n    var truck: Truck = {\n\n      name: '',\n      imgLink: '',\n      cuisine: '',\n      description: '',\n      menuLink: '',\n      price: '',\n      location: {\n        latitude: 0,\n        longitude: 0\n    }\n    };\n\n    // By default, a newly-created truck will have the selected state.\n    this.selectTruck(truck);\n  }\n\n  deletetruck = (truckId: String) => {\n    var idx = this.getIndexOfTruck(truckId);\n    if (idx !== -1) {\n      this.trucks.splice(idx, 1);\n      this.selectTruck(null);\n    }\n    return this.trucks;\n  }\n\n  addtruck = (truck: Truck) => {\n    this.trucks.push(truck);\n    this.selectTruck(truck);\n    return this.trucks;\n  }\n\n  updatetruck = (truck: Truck) => {\n    var idx = this.getIndexOfTruck(truck._id);\n    if (idx !== -1) {\n      this.trucks[idx] = truck;\n      this.selectTruck(truck);\n    }\n    return this.trucks;\n  }\n\n}\n","export class Truck {\n    _id?: string;\n    name: string;\n    imgLink: string;\n    cuisine: string;\n    description: string;\n    menuLink: string;\n    price: string;\n    location: {\n        latitude: number;\n        longitude: number\n    }\n};","import { Injectable } from '@angular/core';\n//import { Truck } from './truck';\nimport { Http, Response } from '@angular/http';\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\n\n\nimport { Observable, of} from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nimport { MessageService } from '../message.service';\n\nimport { Cuisine } from '../cuisine';\nimport { CUISINES } from '../mock-cuisines';\nimport { Truck } from './truck';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  \n  private trucksUrl = '/api/trucks';\n  \n  constructor(\n    private http: Http,\n    private messageService: MessageService\n    ) { };\n\n// get(\"/api/Trucks\")\ngetTrucks(): Promise<void | Truck[]> {\n  return this.http.get(this.trucksUrl)\n             .toPromise()\n             .then(response => response.json() as Truck[])\n             .catch(this.handleError);\n}\n\n// post(\"/api/Trucks\")\ncreateTruck(newTruck: Truck): Promise<void | Truck> {\n  return this.http.post(this.trucksUrl, newTruck)\n             .toPromise()\n             .then(response => response.json() as Truck)\n             .catch(this.handleError);\n}\n\n\n// delete(\"/api/Trucks/:id\")\ndeleteTruck(delTruckId: String): Promise<void | String> {\n  return this.http.delete(this.trucksUrl + '/' + delTruckId)\n             .toPromise()\n             .then(response => response.json() as String)\n             .catch(this.handleError);\n}\n\n// put(\"/api/Trucks/:id\")\nupdateTruck(putTruck: Truck): Promise<void | Truck> {\n  var putUrl = this.trucksUrl + '/' + putTruck._id;\n  return this.http.put(putUrl, putTruck)\n             .toPromise()\n             .then(response => response.json() as Truck)\n             .catch(this.handleError);\n}\n\nprivate handleError (error: any) {\n  let errMsg = (error.message) ? error.message :\n  error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n  console.error(errMsg); // log to console instead\n}\n}\n\n// getCuisines(): Observable<Cuisine[]> {\n//   return of (CUISINES);\n// }\n// getCuisine(id: number):\n// Observable<Cuisine> {\n//   return of (CUISINES.find(cuisine => cuisine.id === id));\n// }\n\n\n\n  /** GET trucks from the server */\n  // getTrucks (): Observable<Truck[]> {\n  //   return this.http.get<Truck[]>(this.trucksUrl)\n  //     .pipe(\n  //       tap(trucks => this.log('fetched trucks')),\n  //       catchError(this.handleError('gettrucks', []))\n  //     );\n  // }\n \n  /** GET Truck by id. Return `undefined` when id not found */\n  // getTruckNo404<Data>(id: number): Observable<Truck> {\n  //   const url = `${this.trucksUrl}/?id=${id}`;\n  //   return this.http.get<Truck[]>(url)\n  //     .pipe(\n  //       map(trucks => trucks[0]), // returns a {0|1} element array\n  //       tap(h => {\n  //         const outcome = h ? `fetched` : `did not find`;\n  //         this.log(`${outcome} Truck id=${id}`);\n  //       }),\n  //       catchError(this.handleError<Truck>(`getTruck id=${id}`))\n  //     );\n  // }\n \n  // /** GET Truck by id. Will 404 if id not found */\n  // getTruck(id: number): Observable<Truck> {\n  //   const url = `${this.trucksUrl}/${id}`;\n  //   return this.http.get<Truck>(url).pipe(\n  //     tap(_ => this.log(`fetched Truck id=${id}`)),\n  //     catchError(this.handleError<Truck>(`getTruck id=${id}`))\n  //   );\n  // }\n \n  // /* GET trucks whose name contains search term */\n  // searchtrucks(term: string): Observable<Truck[]> {\n  //   if (!term.trim()) {\n  //     // if not search term, return empty Truck array.\n  //     return of([]);\n  //   }\n  //   return this.http.get<Truck[]>(`${this.trucksUrl}/?name=${term}`).pipe(\n  //     tap(_ => this.log(`found trucks matching \"${term}\"`)),\n  //     catchError(this.handleError<Truck[]>('searchtrucks', []))\n  //   );\n  // }\n \n  // //////// Save methods //////////\n \n  // /** POST: add a new Truck to the server */\n  // addTruck (Truck: Truck): Observable<Truck> {\n  //   return this.http.post<Truck>(this.trucksUrl, Truck, httpOptions).pipe(\n  //     tap((Truck: Truck) => this.log(`added Truck w/ id=${Truck.id}`)),\n  //     catchError(this.handleError<Truck>('addTruck'))\n  //   );\n  // }\n \n  // /** DELETE: delete the Truck from the server */\n  // deleteTruck (Truck: Truck | number): Observable<Truck> {\n  //   const id = typeof Truck === 'number' ? Truck : Truck.id;\n  //   const url = `${this.trucksUrl}/${id}`;\n \n  //   return this.http.delete<Truck>(url, httpOptions).pipe(\n  //     tap(_ => this.log(`deleted Truck id=${id}`)),\n  //     catchError(this.handleError<Truck>('deleteTruck'))\n  //   );\n  // }\n \n  // /** PUT: update the Truck on the server */\n  // updateTruck (Truck: Truck): Observable<any> {\n  //   return this.http.put(this.trucksUrl, Truck, httpOptions).pipe(\n  //     tap(_ => this.log(`updated Truck id=${Truck.id}`)),\n  //     catchError(this.handleError<any>('updateTruck'))\n  //   );\n  // }\n \n  // /**\n  //  * Handle Http operation that failed.\n  //  * Let the app continue.\n  //  * @param operation - name of the operation that failed\n  //  * @param result - optional value to return as the observable result\n  //  */\n  // private handleError<T> (operation = 'operation', result?: T) {\n  //   return (error: any): Observable<T> => {\n \n  //     // TODO: send the error to remote logging infrastructure\n  //     console.error(error); // log to console instead\n \n  //     // TODO: better job of transforming error for user consumption\n  //     this.log(`${operation} failed: ${error.message}`);\n \n  //     // Let the app keep running by returning an empty result.\n  //     return of(result as T);\n  //   };\n  // }\n \n  // /** Log a TruckService message with the MessageService */\n  // private log(message: string) {\n  //   this.messageService.add(`TruckService: ${message}`);\n  // }\n\n \n  // getTrucks(): Observable<Truck[]> {\n  //   return this.http.get<Truck[]>(\n  //     this.trucksUrl, { observe: 'response'}\n  //   );\n\n  //   return of (TRUCKS);\n  // }\n  // getTruck(id: number): Observable<Truck>{\n  //   return of (TRUCKS.find(truck => truck.id === id));\n  // }\n\n  \n//}\n"],"sourceRoot":""}
=======
{"version":3,"sources":["webpack:///./node_modules/@angular/http/fesm5/http.js","webpack:///./src/app/consumer/account/account.component.css","webpack:///./src/app/consumer/account/account.component.html","webpack:///./src/app/consumer/account/account.component.ts","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.css","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.html","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.ts","webpack:///./src/app/consumer/consumer-page/consumer-page.component.css","webpack:///./src/app/consumer/consumer-page/consumer-page.component.html","webpack:///./src/app/consumer/consumer-page/consumer-page.component.ts","webpack:///./src/app/consumer/consumer-routing.module.ts","webpack:///./src/app/consumer/consumer.module.ts","webpack:///./src/app/consumer/review/review.component.css","webpack:///./src/app/consumer/review/review.component.html","webpack:///./src/app/consumer/review/review.component.ts","webpack:///./src/app/consumer/truck-detail/truck-detail.component.css","webpack:///./src/app/consumer/truck-detail/truck-detail.component.html","webpack:///./src/app/consumer/truck-detail/truck-detail.component.ts","webpack:///./src/app/consumer/truck-list/truck-list.component.css","webpack:///./src/app/consumer/truck-list/truck-list.component.html","webpack:///./src/app/consumer/truck-list/truck-list.component.ts","webpack:///./src/app/consumer/truck-search/truck-search.component.css","webpack:///./src/app/consumer/truck-search/truck-search.component.html","webpack:///./src/app/consumer/truck-search/truck-search.component.ts","webpack:///./src/app/consumer/user-info/user-info.component.css","webpack:///./src/app/consumer/user-info/user-info.component.html","webpack:///./src/app/consumer/user-info/user-info.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/truckSearch.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAE4E;AACd;AAC5B;AACkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wDAAwD;AACxD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,EAAE;AACrF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C,kCAAkC,EAAE;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uEAAuE,EAAE;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8CAA8C;AAC3F;AACA;AACA;AACA,0CAA0C,mDAAmD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2CAA2C;AACvF;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC,sDAAQ,gBAAgB,EAAE;AACnG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yEAAyE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA,6CAA6C,yBAAyB;AACtE,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA,aAAa,cAAc;AAC3B,IAAI;AACJ;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,gBAAgB;AAChB,QAAQ;AACR;AACA;AACA,QAAQ;AACR,gDAAgD;AAChD,8CAA8C,YAAY;AAC1D,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA,kDAAkD,sBAAsB;AACxE,wBAAwB,eAAe;AACvC,YAAY,WAAW,YAAY,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,oEAAoE;AAC/E;AACA,WAAW,IAAI;AACf;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,oCAAoC,8CAA8C;AAClF;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,IAAI;AACJ,8EAA8E;AAC9E,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oFAAoF;AACtH;AACA,0BAA0B,wDAAU;AACpC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B;AACrF,2DAA2D,gCAAgC;AAC3F;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA;AACA;AACA,yDAAyD,wCAAwC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC,mGAAmG,EAAE;AAC9I,SAAS;AACT;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,4DAA4D,4CAA4C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kEAAkE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,sCAAsC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gDAAgD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,iFAAiF;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sDAAsD,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA,wBAAwB,yEAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ,4CAA4C;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yDAAyD;AACzD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA;AACA,gCAAgC,sBAAsB,EAAE;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,6DAA6D;AAC7D,gDAAgD;AAChD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,+CAA+C,8CAA8C,EAAE;AAC/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA,eAAe;AACf,sBAAsB,cAAc;AACpC;AACA,kDAAkD,qBAAqB;AACvE,wBAAwB,eAAe;AACvC,YAAY,WAAW,qBAAqB,uBAAuB;AACnE;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yDAAyD;AACzD,4CAA4C;AAC5C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oDAAoD;AACtF;AACA,yBAAyB,wDAAU;AACnC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,IAAI,YAAY;AAChB,qFAAqF,WAAW;AAChG;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbqDAAqD,EAAE;AACrG;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,YAAY;AACvB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"consumer-consumer-module.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __metadata, __extends, __read, __spread } from 'tslib';\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    BrowserXhr = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BrowserXhr);\n    return BrowserXhr;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported http methods.\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestMethod;\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n})(RequestMethod || (RequestMethod = {}));\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @deprecated see https://angular.io/guide/http\n */\nvar ReadyState;\n(function (ReadyState) {\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n})(ReadyState || (ReadyState = {}));\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseType;\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n})(ResponseType || (ResponseType = {}));\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @deprecated see https://angular.io/guide/http\n */\nvar ContentType;\n(function (ContentType) {\n    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n})(ContentType || (ContentType = {}));\n/**\n * Define which buffer to use to store the response\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseContentType;\n(function (ResponseContentType) {\n    ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n    ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n    ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n    ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n})(ResponseContentType || (ResponseContentType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Headers = /** @class */ (function () {\n    // TODO(vicb): any -> string|string[]\n    function Headers(headers) {\n        var _this = this;\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var index = line.indexOf(':');\n            if (index > 0) {\n                var name_1 = line.slice(0, index);\n                var value = line.slice(index + 1).trim();\n                headers.set(name_1, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    Headers.prototype.append = function (name, value) {\n        var values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    Headers.prototype.delete = function (name) {\n        var lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    Headers.prototype.get = function (name) {\n        var values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * Returns string of all headers.\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var serialized = {};\n        this._headers.forEach(function (values, name) {\n            var split = [];\n            values.forEach(function (v) { return split.push.apply(split, __spread(v.split(','))); });\n            serialized[_this._normalizedNames.get(name)] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseOptions = /** @class */ (function () {\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link ResponseOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create {@link Response Responses}.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {@link Response}\n * object.\n *\n * ### Example\n *\n * ```\n * import {BaseResponseOptions, Response} from '@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseResponseOptions = /** @class */ (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    BaseResponseOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseResponseOptions);\n    return BaseResponseOptions;\n}(ResponseOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ConnectionBackend = /** @class */ (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XSRFStrategy = /** @class */ (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\nfunction stringToArrayBuffer(input) {\n    var view = new Uint16Array(input.length);\n    for (var i = 0, strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var map = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var eqIdx = param.indexOf('=');\n            var _a = __read(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2), key = _a[0], val = _a[1];\n            var list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated see https://angular.io/guide/http\n **/\nvar QueryEncoder = /** @class */ (function () {\n    function QueryEncoder() {\n    }\n    QueryEncoder.prototype.encodeKey = function (key) { return standardEncoding(key); };\n    QueryEncoder.prototype.encodeValue = function (value) { return standardEncoding(value); };\n    return QueryEncoder;\n}());\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar URLSearchParams = /** @class */ (function () {\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    URLSearchParams.prototype.clone = function () {\n        var clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    URLSearchParams.prototype.get = function (param) {\n        var storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {@link Request} and {@link Response}\n * https://fetch.spec.whatwg.org/#body\n */\nvar Body = /** @class */ (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(this._body));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(this._body));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return this._body;\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n      * Returns the request's body as a Blob, assuming that body exists.\n      */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return this._body;\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Response = /** @class */ (function (_super) {\n    __extends(Response, _super);\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\nfunction _getJsonpConnections() {\n    var w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n// Make sure not to evaluate this in a non-browser environment!\nvar BrowserJsonp = /** @class */ (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    BrowserJsonp.prototype.build = function (url) {\n        var node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n    // Remove <script> element from the DOM\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((node));\n        }\n    };\n    BrowserJsonp = __decorate([\n        Injectable()\n    ], BrowserJsonp);\n    return BrowserJsonp;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPConnection = /** @class */ (function () {\n    /** @internal */\n    function JSONPConnection(req, _dom, baseResponseOptions) {\n        var _this = this;\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    JSONPConnection.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection;\n}());\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPBackend = /** @class */ (function (_super) {\n    __extends(JSONPBackend, _super);\n    /** @internal */\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    JSONPBackend.prototype.createConnection = function (request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    JSONPBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserJsonp, ResponseOptions])\n    ], JSONPBackend);\n    return JSONPBackend;\n}(ConnectionBackend));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {@link MockConnection} may be interacted with in tests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRConnection = /** @class */ (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar CookieXSRFStrategy = /** @class */ (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n * @Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRBackend = /** @class */ (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    XHRBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserXhr, ResponseOptions,\n            XSRFStrategy])\n    ], XHRBackend);\n    return XHRBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestOptions = /** @class */ (function () {\n    // TODO(Dzmitry): remove search when this.search is removed\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {@link RequestMethod RequestMethod.Get}\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link RequestOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create and send {@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseRequestOptions = /** @class */ (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    BaseRequestOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseRequestOptions);\n    return BaseRequestOptions;\n}(RequestOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n *\n * @Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Request = /** @class */ (function (_super) {\n    __extends(Request, _super);\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\nfunction urlEncodeParams(params) {\n    var searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = w /** TODO #9100 */['FormData'] || noop;\nvar Blob$1 = w /** TODO #9100 */['Blob'] || noop;\nvar ArrayBuffer$1 = w /** TODO #9100 */['ArrayBuffer'] || noop;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {@link Response} when a\n * response is received.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '@angular/http';\n * import {map} from 'rxjs/operators';\n *\n * @Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .pipe(map(res => res.json()))\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Http = /** @class */ (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    Http.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    Http = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Http);\n    return Http;\n}());\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar Jsonp = /** @class */ (function (_super) {\n    __extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    Jsonp = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Jsonp);\n    return Jsonp;\n}(Http));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar HttpModule = /** @class */ (function () {\n    function HttpModule() {\n    }\n    HttpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                BrowserXhr,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                XHRBackend,\n                { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n            ],\n        })\n    ], HttpModule);\n    return HttpModule;\n}());\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JsonpModule = /** @class */ (function () {\n    function JsonpModule() {\n    }\n    JsonpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                BrowserJsonp,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                JSONPBackend,\n            ],\n        })\n    ], JsonpModule);\n    return JsonpModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar VERSION = new Version('6.1.10');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\n//# sourceMappingURL=http.js.map\n","module.exports = \"\"","module.exports = \"<p>\\n  account works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Let's Eat!</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/consumer\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/account\\\">Account</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/reviews\\\">Reviews</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink= \\\"/search\\\"class=\\\"nav-link\\\" href=\\\"/truck-search\\\">Search</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <!-- <button class=\\\"btn btn-primary\\\" (click)=\\\"onLogin()\\\">Tweet</button> -->\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Tweet</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Fav Updates!</a>\\n        </li>\\n      </ul>\\n    </div>\\n    </div>\\n  </nav>\\n  <div class = \\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-consumer-navbar',\n  templateUrl: './consumer-navbar.component.html',\n  styleUrls: ['./consumer-navbar.component.css']\n})\nexport class ConsumerNavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Welcome to Munch Bunch</h2>\\n\\n<app-consumer-navbar></app-consumer-navbar>\\n\\n<!-- <div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\"> -->\\n      \\n      <app-truck-search></app-truck-search>\\n    \\n  \\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-consumer-page',\n  templateUrl: './consumer-page.component.html',\n  styleUrls: ['./consumer-page.component.css']\n})\nexport class ConsumerPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReviewComponent } from './review/review.component';\n //import { from } from 'rxjs';\nimport { TruckSearchComponent } from './truck-search/truck-search.component';\n\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { TruckDetailComponent } from './truck-detail/truck-detail.component';\nimport { ConsumerPageComponent } from './consumer-page/consumer-page.component';\nimport { TruckListComponent } from './truck-list/truck-list.component';\n\n\nconst consumerRoutes: Routes = [\n  { path: '', \n  component: ConsumerPageComponent },\n  { path: 'reviews', component: ReviewComponent },\n  { path: 'truck-search', component: TruckSearchComponent},\n  { path: 'account', component: UserInfoComponent },\n  { path: ':cuisineName', component: TruckListComponent},\n  { path: ':cuisineName/:truckId', component: TruckDetailComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(consumerRoutes)],\n  exports: [RouterModule]\n})\nexport class ConsumerRoutingModule { }\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ConsumerRoutingModule } from './consumer-routing.module';\n\nimport { ConsumerPageComponent } from './consumer-page/consumer-page.component';\nimport { ReviewComponent } from './review/review.component';\nimport { ConsumerNavbarComponent } from './consumer-navbar/consumer-navbar.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\nimport { TruckSearchComponent } from './truck-search/truck-search.component';\nimport { TruckDetailComponent } from './truck-detail/truck-detail.component';\nimport { TruckListComponent } from './truck-list/truck-list.component';\nimport { AccountComponent } from './account/account.component';\n\nimport { CommonService } from './common.service';\nimport { MapComponent } from '../map/map.component';\nimport { AgmCoreModule } from '@agm/core';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConsumerRoutingModule,\n    HttpClientModule,\n    AgmCoreModule\n  ],\n  declarations: [ConsumerPageComponent, ReviewComponent, ConsumerNavbarComponent, UserInfoComponent, TruckSearchComponent, TruckDetailComponent,  TruckListComponent, AccountComponent,\n  MapComponent ],\n  providers: [CommonService]\n})\nexport class ConsumerModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  review works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>truck name</h2>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { SearchService } from 'src/app/truckSearch.service';\nimport { Subscription } from 'rxjs';\nimport { TRUCKS } from '../../mock-trucks';\nimport { Trucks } from 'src/app/truck';\n\n//Gives info for one truck on click from search\n\n@Component({\n  selector: 'app-truck-detail',\n  templateUrl: './truck-detail.component.html',\n  styleUrls: ['./truck-detail.component.css']\n})\nexport class TruckDetailComponent implements OnInit {\nprivate subscription: Subscription;\n\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private searchService: SearchService\n  ) { }\n\n  ngOnInit() {\n    //this.truck = this.route.paramMap.pipe(switchMap((params: ParamMap) => this.searchService.getTruck(params.get('id'))));\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"    <div class=\\\"container\\\">\\n        <div class=\\\"card-deck\\\">\\n          <!-- ngonit for gettrucks() -->\\n            <div *ngFor=\\\"let truck of trucks\\\" class=\\\"row \\\">\\n              <div class=\\\"col-sm-4 justify-content-center\\\">\\n                <div class=\\\"card p-3 truck-card\\\">\\n                  <a routerLink=\\\"{{cuisine.name}}/{{truck.id}}\\\">\\n                  <img class=\\\"card-img-top truck-image\\\" src=\\\"{{truck.imgLink}}\\\" alt=\\\"{{truck.name}}\\\">\\n                  <div class=\\\"card-body p-0\\\">\\n                    <p class=\\\"text-center font-weight-bold\\\">{{truck.name}}\\n                      <br>\\n                      {{truck.price}}\\n                      <br>\\n                      <a href=\\\"{{truck.menuLink}}\\\">Website</a>\\n                    </p>\\n                  </div>\\n          \\n                  </a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Trucks } from 'src/app/truck';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SearchService } from 'src/app/truckSearch.service';\n\n@Component({\n  selector: 'app-truck-list',\n  templateUrl: './truck-list.component.html',\n  styleUrls: ['./truck-list.component.css']\n})\nexport class TruckListComponent implements OnInit {\n\n  trucks: Trucks[];\n  getTrucks(): void {\n    // this.searchService.getTrucks().subscribe(trucks => this.trucks = trucks);\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private searchService: SearchService\n  ) { }\n\n  ngOnInit() {\n  this.getTrucks();\n\n  }\n\n}\n","module.exports = \".cuisine-card {\\n    width: 150px;\\n    height: 150px;\\n    margin: 3px;\\n    border: solid 1px red;\\n    box-shadow: 0 10px 18px 0 rgba(0,0,0,0.2), 0 8px 22px 0 rgba(0,0,0,0.19);\\n    cursor: pointer;\\n}\\n.cuisine-card:hover {\\n    background-color: red;\\n    color: white;\\n}\\n.cuisine-name {\\n    text-align: center;\\n    font-size: 20px;\\n    font-size-adjust: inherit;\\n    \\n}\\n.cuisine-image {\\n    height: 100px;\\n\\n}\\n.hot {\\n    padding: 3px;\\n    font-size: 24px;\\n}\\n@media screen and (min-width: 300px) and (max-width: 600px) {\\n.cuisine-card{\\n    height: auto;\\n    width: auto;\\n}\\nimg{\\n    height: auto;\\n    width: auto;\\n    align-content: center;\\n}\\n.cuisine-name{\\n    display: none;\\n}\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12 col-md-3\\\">\\n          <h5>What's Hot</h5>\\n          <span><i class=\\\"hot text-danger fas fa-fire\\\"></i>\\n            <i class=\\\"hot text-danger fas fa-fire\\\"></i>\\n            <i class=\\\"hot text-danger fas fa-fire\\\"></i></span>\\n        </div>\\n    <div class=\\\"col-sm-12 col-md-9\\\">\\n      <h5>Search by cuisine</h5>\\n      <div class=\\\"card-deck\\\">\\n        <div *ngFor=\\\"let cuisine of cuisines\\\" class=\\\"row \\\">\\n          <div class=\\\"col-sm-4 justify-content-center\\\">\\n            <div class=\\\"card p-3 cuisine-card\\\">\\n              <a routerLink=\\\"{{cuisine.name}}\\\">\\n                <img class=\\\"card-img-top cuisine-image\\\" src=\\\"{{cuisine.imgLink}}\\\" alt=\\\"{{cuisine.name}}\\\">\\n                <div class=\\\"card-body p-0\\\">\\n                  <p class=\\\"cuisine-name\\\">{{cuisine.name}}</p>\\n                </div>\\n\\n              </a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h3>Search by Map</h3>\\n    \\n    <app-map></app-map>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OnDestroy } from '@angular/core';\nimport { ISubscription } from 'rxjs/Subscription';\n// import { Cuisine } from '../../cuisine';\n// import { CUISINES } from '../../mock-cuisines';\nimport { SearchService } from '../../truckSearch.service';\nimport { Trucks } from 'src/app/truck';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-truck-search',\n  templateUrl: './truck-search.component.html',\n  styleUrls: ['./truck-search.component.css']\n})\n\n\nexport class TruckSearchComponent implements OnInit {\n\n  selectedTruck: Trucks;\n\n  trucks: Trucks[];\n\nconstructor(\n  private searchService: SearchService,\n  public client: HttpClient \n  ) { }\n\n   getTrucks() {\n    return this.searchService.getTrucks()\n    //.subscribe(trucks => this.trucks = trucks);\n   }\n  \n   \n  // cuisines: Cuisine[];\n\n  // getCuisines(): void {\n  //  this.searchService.getCuisines().subscribe(cuisines => this.cuisines = cuisines);\n  // }\n\n  ngOnInit() {\n    //this.getCuisines();\n    this.getTrucks();\n  }\n  onSelect(trucks: Trucks): void{\n    this.selectedTruck = trucks;\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <form #userForm=\\\"ngForm\\\"   (ngSubmit)=\\\"onSave(userForm.value)\\\" novalidate>  \\n  <p>Is \\\"myForm\\\" valid? {{userForm.valid}}</p>  \\n <table>  \\n<tr>  \\n<td>name</td>  \\n<td>   \\n    <input name=\\\"id\\\" type=\\\"hidden\\\"     [(ngModel)]=\\\"id\\\" />  \\n     <input name=\\\"name\\\" type=\\\"text\\\"  required  [(ngModel)]=\\\"name\\\" />  \\n  \\n </td>  \\n</tr>  \\n  \\n<tr>  \\n    <td>address</td>  \\n    <td>    <input name=\\\"address\\\" required  type=\\\"text\\\"   [(ngModel)]=\\\"address\\\" /></td>  \\n    </tr>  \\n    <tr>  \\n        <td colspan=\\\"2\\\">  \\n    <input type=\\\"submit\\\" value=\\\"{{valbutton}}\\\" />  \\n    </td>  \\n    </tr>  \\n </table>  \\n</form>   \\n  \\n<table border='1'>  \\n  \\n  <tr>  \\n    <td>Id</td>  \\n    <td>Name</td>  \\n    <td>Address</td>  \\n    <td>Edit</td>  \\n    <td>Delete</td>  \\n  </tr>  \\n  <tr *ngFor=\\\"let kk of Repdata;let ind = index\\\">  \\n       \\n    <td>{{ind + 1}}</td>  \\n    <td>{{kk.name}}</td>  \\n    <td>{{kk.address}}</td>  \\n    <td><a (click)=\\\"edit(kk)\\\" style=\\\"color:blueviolet\\\">Edit</a></td>  \\n    <td><a (click)=\\\"delete(kk._id)\\\" style=\\\"color:blueviolet\\\">Delete</a>  </td>  \\n  </tr>  \\n</table>   -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nimport { FormGroup, FormControl, Validators, FormsModule } from '@angular/forms';\n\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\n\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css']\n})\nexport class UserInfoComponent implements OnInit {\n\n  constructor(private newService: CommonService){ }\n  Repdata;\n  valbutton = \"Save\";\n\n  ngOnInit() {\n  //   this.newService.getConsumer().subscribe(data => this.Repdata = data)\n  // }\n  // onSave = function(consumer, isValid: boolean) {\n  //   consumer.mode = this.valbutton;\n  //   this.newService.saveConsumer(consumer).subscribe(data => { alert(data.data);\n  //   this.ngOnInit();\n  //   },\n  //   error => this.errorMessage = error)\n  // }\n  // edit = function (kk) {\n  //   this.id = kk._id;\n  //   this.name = kk.name;\n  //   this.address = kk.address;\n  //   this.valbutton = \"Update\";\n  // }\n  // delete = function(id) {\n  //   this.newService.deleteConsumer(id).subscribe(data => { alert(data.data); this.ngOnInit();}, error => this.errorMessage = error)\n  }\n}\n","module.exports = \"agm-map {\\n    height: 500px;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n\\n\\n  <agm-map [latitude]=\\\"lat\\\" \\n  [longitude]=\\\"lng\\\" \\n  [zoom] =\\\"zoom\\\" \\n  [disableDefaultUI]=\\\"false\\\" \\n  [zoomControl]=\\\"false\\\"\\n  (mapClick)=\\\"OnChoseLocation($event)\\\">\\n\\n  <agm-marker *ngFor= \\\"let m of markers; let i = index\\\"\\n  [latitude]=\\\"lat\\\" \\n  [longitude]=\\\"lng\\\"\\n  [markerDraggable]=\\\"m.draggable\\\"\\n  (dragEnd)=\\\"markerDraggable(m,event)\\\">\\n  \\n  <agm-info-window>Information when you click the pin</agm-info-window></agm-marker>\\n      \\n  </agm-map>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\ninterface marker {\n\tlat: number;\n\tlng: number;\n\tlabel?: string;\n\tdraggable: boolean;\n}\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  zoom: number = 12;\n\n  lat: number = 39.6768129;\n  lng: number = -104.9578801;\n\n  clickedMarker(label: string, index: number) {\n    console.log(`clicked the marker: ${label || index}`)\n  }\n\n  OnChoseLocation(event){\n    this.lat = event.coords.lat;\n    this.lng = event.coords.lng;\n    console.log(\"lat\" , event.coords.lat);\n    console.log(\"lng\" , event.coords.lng);\n  \n  }\n\n  mapClicked(event ) {\n    this.markers.push({\n      lat: event.coords.lat,\n      lng: event.coords.lng,\n      draggable: true\n    });\n  }\n\n  markerDragEnd(m: marker, event) {\n    console.log('dragEnd', m, event);\n  }\n\n  markers: marker[] =[\n      {\n        lat: 39.6768129,\n        lng: -104.9578801,\n        label: 'A',\n        draggable: true\n      }\n  ]\n \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Trucks } from './truck';\nimport { Http, Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of} from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nimport { MessageService } from './message.service';\n\nimport { Cuisine } from './cuisine';\nimport { CUISINES } from './mock-cuisines';\n\n\n\n//import { TRUCKS } from './mock-trucks';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  \n  private trucksUrl = 'api/trucks';\n  \n  constructor(\n    private http: Http,\n    private messageService: MessageService\n    ) { };\n\n// get(\"/api/Truckss\")\ngetTrucks(): Promise<void | Trucks[]> {\n  return this.http.get(this.trucksUrl)\n             .toPromise()\n             .then(response => response.json() as Trucks[])\n             .catch(this.handleError);\n}\n\n// post(\"/api/Truckss\")\ncreateTrucks(newTrucks: Trucks): Promise<void | Trucks> {\n  return this.http.post(this.trucksUrl, newTrucks)\n             .toPromise()\n             .then(response => response.json() as Trucks)\n             .catch(this.handleError);\n}\n\n// get(\"/api/Truckss/:id\") endpoint not used by Angular app\n\n// delete(\"/api/Truckss/:id\")\ndeleteTrucks(delTrucksId: String): Promise<void | String> {\n  return this.http.delete(this.trucksUrl + '/' + delTrucksId)\n             .toPromise()\n             .then(response => response.json() as String)\n             .catch(this.handleError);\n}\n\n// put(\"/api/Truckss/:id\")\nupdateTrucks(putTrucks: Trucks): Promise<void | Trucks> {\n  var putUrl = this.trucksUrl + '/' + putTrucks._id;\n  return this.http.put(putUrl, putTrucks)\n             .toPromise()\n             .then(response => response.json() as Trucks)\n             .catch(this.handleError);\n}\n\nprivate handleError (error: any) {\n  let errMsg = (error.message) ? error.message :\n  error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n  console.error(errMsg); // log to console instead\n}\n}\n\n// getCuisines(): Observable<Cuisine[]> {\n//   return of (CUISINES);\n// }\n// getCuisine(id: number):\n// Observable<Cuisine> {\n//   return of (CUISINES.find(cuisine => cuisine.id === id));\n// }\n\n\n\n  /** GET trucks from the server */\n  // getTrucks (): Observable<Truck[]> {\n  //   return this.http.get<Truck[]>(this.trucksUrl)\n  //     .pipe(\n  //       tap(trucks => this.log('fetched trucks')),\n  //       catchError(this.handleError('gettrucks', []))\n  //     );\n  // }\n \n  /** GET Truck by id. Return `undefined` when id not found */\n  // getTruckNo404<Data>(id: number): Observable<Truck> {\n  //   const url = `${this.trucksUrl}/?id=${id}`;\n  //   return this.http.get<Truck[]>(url)\n  //     .pipe(\n  //       map(trucks => trucks[0]), // returns a {0|1} element array\n  //       tap(h => {\n  //         const outcome = h ? `fetched` : `did not find`;\n  //         this.log(`${outcome} Truck id=${id}`);\n  //       }),\n  //       catchError(this.handleError<Truck>(`getTruck id=${id}`))\n  //     );\n  // }\n \n  // /** GET Truck by id. Will 404 if id not found */\n  // getTruck(id: number): Observable<Truck> {\n  //   const url = `${this.trucksUrl}/${id}`;\n  //   return this.http.get<Truck>(url).pipe(\n  //     tap(_ => this.log(`fetched Truck id=${id}`)),\n  //     catchError(this.handleError<Truck>(`getTruck id=${id}`))\n  //   );\n  // }\n \n  // /* GET trucks whose name contains search term */\n  // searchtrucks(term: string): Observable<Truck[]> {\n  //   if (!term.trim()) {\n  //     // if not search term, return empty Truck array.\n  //     return of([]);\n  //   }\n  //   return this.http.get<Truck[]>(`${this.trucksUrl}/?name=${term}`).pipe(\n  //     tap(_ => this.log(`found trucks matching \"${term}\"`)),\n  //     catchError(this.handleError<Truck[]>('searchtrucks', []))\n  //   );\n  // }\n \n  // //////// Save methods //////////\n \n  // /** POST: add a new Truck to the server */\n  // addTruck (Truck: Truck): Observable<Truck> {\n  //   return this.http.post<Truck>(this.trucksUrl, Truck, httpOptions).pipe(\n  //     tap((Truck: Truck) => this.log(`added Truck w/ id=${Truck.id}`)),\n  //     catchError(this.handleError<Truck>('addTruck'))\n  //   );\n  // }\n \n  // /** DELETE: delete the Truck from the server */\n  // deleteTruck (Truck: Truck | number): Observable<Truck> {\n  //   const id = typeof Truck === 'number' ? Truck : Truck.id;\n  //   const url = `${this.trucksUrl}/${id}`;\n \n  //   return this.http.delete<Truck>(url, httpOptions).pipe(\n  //     tap(_ => this.log(`deleted Truck id=${id}`)),\n  //     catchError(this.handleError<Truck>('deleteTruck'))\n  //   );\n  // }\n \n  // /** PUT: update the Truck on the server */\n  // updateTruck (Truck: Truck): Observable<any> {\n  //   return this.http.put(this.trucksUrl, Truck, httpOptions).pipe(\n  //     tap(_ => this.log(`updated Truck id=${Truck.id}`)),\n  //     catchError(this.handleError<any>('updateTruck'))\n  //   );\n  // }\n \n  // /**\n  //  * Handle Http operation that failed.\n  //  * Let the app continue.\n  //  * @param operation - name of the operation that failed\n  //  * @param result - optional value to return as the observable result\n  //  */\n  // private handleError<T> (operation = 'operation', result?: T) {\n  //   return (error: any): Observable<T> => {\n \n  //     // TODO: send the error to remote logging infrastructure\n  //     console.error(error); // log to console instead\n \n  //     // TODO: better job of transforming error for user consumption\n  //     this.log(`${operation} failed: ${error.message}`);\n \n  //     // Let the app keep running by returning an empty result.\n  //     return of(result as T);\n  //   };\n  // }\n \n  // /** Log a TruckService message with the MessageService */\n  // private log(message: string) {\n  //   this.messageService.add(`TruckService: ${message}`);\n  // }\n\n \n  // getTrucks(): Observable<Truck[]> {\n  //   return this.http.get<Truck[]>(\n  //     this.trucksUrl, { observe: 'response'}\n  //   );\n\n  //   return of (TRUCKS);\n  // }\n  // getTruck(id: number): Observable<Truck>{\n  //   return of (TRUCKS.find(truck => truck.id === id));\n  // }\n\n  \n//}\n"],"sourceRoot":""}
>>>>>>> Stashed changes
