{"version":3,"sources":["webpack:///./src/app/consumer/account/account.component.css","webpack:///./src/app/consumer/account/account.component.html","webpack:///./src/app/consumer/account/account.component.ts","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.css","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.html","webpack:///./src/app/consumer/consumer-navbar/consumer-navbar.component.ts","webpack:///./src/app/consumer/consumer-page/consumer-page.component.css","webpack:///./src/app/consumer/consumer-page/consumer-page.component.html","webpack:///./src/app/consumer/consumer-page/consumer-page.component.ts","webpack:///./src/app/consumer/consumer-routing.module.ts","webpack:///./src/app/consumer/consumer.module.ts","webpack:///./src/app/consumer/review/review.component.css","webpack:///./src/app/consumer/review/review.component.html","webpack:///./src/app/consumer/review/review.component.ts","webpack:///./src/app/consumer/truck-detail/truck-detail.component.css","webpack:///./src/app/consumer/truck-detail/truck-detail.component.html","webpack:///./src/app/consumer/truck-detail/truck-detail.component.ts","webpack:///./src/app/consumer/truck-list/truck-list.component.css","webpack:///./src/app/consumer/truck-list/truck-list.component.html","webpack:///./src/app/consumer/truck-list/truck-list.component.ts","webpack:///./src/app/consumer/truck-search/truck-search.component.css","webpack:///./src/app/consumer/truck-search/truck-search.component.html","webpack:///./src/app/consumer/truck-search/truck-search.component.ts","webpack:///./src/app/consumer/user-info/user-info.component.css","webpack:///./src/app/consumer/user-info/user-info.component.html","webpack:///./src/app/consumer/user-info/user-info.component.ts","webpack:///./src/app/mock-cuisines.ts","webpack:///./src/app/truckSearch.service.ts"],"names":[],"mappings":"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","file":"consumer-consumer-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<p>\\n  account works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Let's Eat!</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/consumer\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/account\\\">Account</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/reviews\\\">Reviews</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink= \\\"/search\\\"class=\\\"nav-link\\\" href=\\\"/truck-search\\\">Search</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"onLogin()\\\">Tweet</button>\\n          <!-- <a class=\\\"nav-link\\\" href=\\\"#\\\">Tweet</a> -->\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Fav Updates!</a>\\n        </li>\\n      </ul>\\n    </div>\\n    </div>\\n  </nav>\\n  <div class = \\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-consumer-navbar',\n  templateUrl: './consumer-navbar.component.html',\n  styleUrls: ['./consumer-navbar.component.css']\n})\nexport class ConsumerNavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Welcome to Munch Bunch</h2>\\n\\n<app-consumer-navbar></app-consumer-navbar>\\n\\n<!-- <div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\"> -->\\n      \\n      <app-truck-search></app-truck-search>\\n    <!-- <app-map></app-map> -->\\n    <!-- <div class=\\\"col-sm-12\\\">\\n      <h4>Search by Location</h4>\\n      <app-map></app-map>\\n    </div>\\n    <div class=\\\"col-sm-12 col-md-6\\\">\\n      <h4>Search by What's Hot!</h4>\\n      \\n    </div>\\n  </div> -->\\n  \\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-consumer-page',\n  templateUrl: './consumer-page.component.html',\n  styleUrls: ['./consumer-page.component.css']\n})\nexport class ConsumerPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReviewComponent } from './review/review.component';\n //import { from } from 'rxjs';\nimport { TruckSearchComponent } from './truck-search/truck-search.component';\n\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { TruckDetailComponent } from './truck-detail/truck-detail.component';\nimport { ConsumerPageComponent } from './consumer-page/consumer-page.component';\nimport { TruckListComponent } from './truck-list/truck-list.component';\n\n\nconst consumerRoutes: Routes = [\n  { path: '', \n  component: ConsumerPageComponent },\n  { path: 'reviews', component: ReviewComponent },\n  { path: 'truck-search', component: TruckSearchComponent},\n  { path: 'account', component: UserInfoComponent },\n  { path: ':cuisineName', component: TruckListComponent},\n  { path: ':cuisineName/:truckId', component: TruckDetailComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(consumerRoutes)],\n  exports: [RouterModule]\n})\nexport class ConsumerRoutingModule { }\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ConsumerRoutingModule } from './consumer-routing.module';\n\nimport { ConsumerPageComponent } from './consumer-page/consumer-page.component';\nimport { ReviewComponent } from './review/review.component';\nimport { ConsumerNavbarComponent } from './consumer-navbar/consumer-navbar.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\nimport { TruckSearchComponent } from './truck-search/truck-search.component';\nimport { TruckDetailComponent } from './truck-detail/truck-detail.component';\nimport { TruckListComponent } from './truck-list/truck-list.component';\nimport { AccountComponent } from './account/account.component';\n\nimport { CommonService } from './common.service';\nimport { MapComponent } from '../map/map.component';\nimport { AgmCoreModule } from '@agm/core';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConsumerRoutingModule,\n    HttpClientModule,\n    AgmCoreModule\n  ],\n  declarations: [ConsumerPageComponent, ReviewComponent, ConsumerNavbarComponent, UserInfoComponent, TruckSearchComponent, TruckDetailComponent,  TruckListComponent, AccountComponent, ],\n  providers: [CommonService]\n})\nexport class ConsumerModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  review works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>{{truck.name}}</h2>\\n<\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { SearchService } from 'src/app/truckSearch.service';\nimport { Subscription } from 'rxjs';\nimport { TRUCKS } from '../../mock-trucks';\nimport { Truck } from 'src/app/truck';\n\n//Gives info for one truck on click from search\n\n@Component({\n  selector: 'app-truck-detail',\n  templateUrl: './truck-detail.component.html',\n  styleUrls: ['./truck-detail.component.css']\n})\nexport class TruckDetailComponent implements OnInit {\nprivate subscription: Subscription;\n\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private searchService: SearchService\n  ) { }\n\n  ngOnInit() {\n    // this.truck = this.route.paramMap.pipe(switchMap((params: ParamMap) => this.searchService.getTruck(params.get('id'))));\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"    <div class=\\\"container\\\">\\n        <div class=\\\"card-deck\\\">\\n          <!-- ngonit for gettrucks() -->\\n            <div *ngFor=\\\"let truck of trucks\\\" class=\\\"row \\\">\\n              <div class=\\\"col-sm-4 justify-content-center\\\">\\n                <div class=\\\"card p-3 truck-card\\\">\\n                  <a routerLink=\\\"{{cuisine.name}}/{{truck.id}}\\\">\\n                  <img class=\\\"card-img-top truck-image\\\" src=\\\"{{truck.imgLink}}\\\" alt=\\\"{{truck.name}}\\\">\\n                  <div class=\\\"card-body p-0\\\">\\n                    <p class=\\\"text-center font-weight-bold\\\">{{truck.name}}\\n                      <br>\\n                      {{truck.price}}\\n                      <br>\\n                      <a href=\\\"{{truck.menuLink}}\\\">Website</a>\\n                    </p>\\n                  </div>\\n          \\n                  </a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Truck } from 'src/app/truck';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SearchService } from 'src/app/truckSearch.service';\n\n@Component({\n  selector: 'app-truck-list',\n  templateUrl: './truck-list.component.html',\n  styleUrls: ['./truck-list.component.css']\n})\nexport class TruckListComponent implements OnInit {\n\n  trucks: Truck[];\n  getTrucks(): void {\n    this.searchService.getTrucks().subscribe(trucks => this.trucks = trucks);\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private searchService: SearchService\n  ) { }\n\n  ngOnInit() {\n  this.getTrucks();\n\n  }\n\n}\n","module.exports = \".cuisine-card {\\n    width: 150px;\\n    height: 150px;\\n    margin: 3px;\\n    border: solid 1px red;\\n    box-shadow: 0 10px 18px 0 rgba(0,0,0,0.2), 0 8px 22px 0 rgba(0,0,0,0.19);\\n    cursor: pointer;\\n}\\n.cuisine-card:hover {\\n    background-color: red;\\n    color: white;\\n}\\n.cuisine-name {\\n    text-align: center;\\n    font-size: 20px;\\n    font-size-adjust: inherit;\\n    \\n}\\n.cuisine-image {\\n    height: 100px;\\n\\n}\\n.hot {\\n    padding: 3px;\\n    font-size: 24px;\\n}\\n@media screen and (min-width: 300px) and (max-width: 600px) {\\n.cuisine-card{\\n    height: auto;\\n    width: auto;\\n}\\nimg{\\n    height: auto;\\n    width: auto;\\n    align-content: center;\\n}\\n.cuisine-name{\\n    display: none;\\n}\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12 col-md-3\\\">\\n          <h5>What's Hot</h5>\\n          <span><i class=\\\"hot text-danger fas fa-fire\\\"></i>\\n            <i class=\\\"hot text-danger fas fa-fire\\\"></i>\\n            <i class=\\\"hot text-danger fas fa-fire\\\"></i></span>\\n        </div>\\n    <div class=\\\"col-sm-12 col-md-9\\\">\\n      <h5>Search by cuisine</h5>\\n      <div class=\\\"card-deck\\\">\\n        <div *ngFor=\\\"let cuisine of cuisines\\\" class=\\\"row \\\">\\n          <div class=\\\"col-sm-4 justify-content-center\\\">\\n            <div class=\\\"card p-3 cuisine-card\\\">\\n              <a routerLink=\\\"{{cuisine.name}}\\\">\\n                <img class=\\\"card-img-top cuisine-image\\\" src=\\\"{{cuisine.imgLink}}\\\" alt=\\\"{{cuisine.name}}\\\">\\n                <div class=\\\"card-body p-0\\\">\\n                  <p class=\\\"cuisine-name\\\">{{cuisine.name}}</p>\\n                </div>\\n\\n              </a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h3>Search by Map</h3>\\n    \\n    <app-map></app-map>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Cuisine } from '../../cuisine';\nimport { CUISINES } from '../../mock-cuisines';\nimport { SearchService } from '../../truckSearch.service';\nimport { Truck } from 'src/app/truck';\n\n@Component({\n  selector: 'app-truck-search',\n  templateUrl: './truck-search.component.html',\n  styleUrls: ['./truck-search.component.css']\n})\nexport class TruckSearchComponent implements OnInit {\n\n  cuisines: Cuisine[];\n\n  getCuisines(): void {\n   this.searchService.getCuisines().subscribe(cuisines => this.cuisines = cuisines);\n  }\n\n  trucks: Truck[];\n   getTrucks(): void {\n     this.searchService.getTrucks().subscribe(trucks => this.trucks = trucks);\n   }\n  constructor(private searchService: SearchService) { }\n\n  ngOnInit() {\n    this.getCuisines();\n    this.getTrucks();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <form #userForm=\\\"ngForm\\\"   (ngSubmit)=\\\"onSave(userForm.value)\\\" novalidate>  \\n  <p>Is \\\"myForm\\\" valid? {{userForm.valid}}</p>  \\n <table>  \\n<tr>  \\n<td>name</td>  \\n<td>   \\n    <input name=\\\"id\\\" type=\\\"hidden\\\"     [(ngModel)]=\\\"id\\\" />  \\n     <input name=\\\"name\\\" type=\\\"text\\\"  required  [(ngModel)]=\\\"name\\\" />  \\n  \\n </td>  \\n</tr>  \\n  \\n<tr>  \\n    <td>address</td>  \\n    <td>    <input name=\\\"address\\\" required  type=\\\"text\\\"   [(ngModel)]=\\\"address\\\" /></td>  \\n    </tr>  \\n    <tr>  \\n        <td colspan=\\\"2\\\">  \\n    <input type=\\\"submit\\\" value=\\\"{{valbutton}}\\\" />  \\n    </td>  \\n    </tr>  \\n </table>  \\n</form>   \\n  \\n<table border='1'>  \\n  \\n  <tr>  \\n    <td>Id</td>  \\n    <td>Name</td>  \\n    <td>Address</td>  \\n    <td>Edit</td>  \\n    <td>Delete</td>  \\n  </tr>  \\n  <tr *ngFor=\\\"let kk of Repdata;let ind = index\\\">  \\n       \\n    <td>{{ind + 1}}</td>  \\n    <td>{{kk.name}}</td>  \\n    <td>{{kk.address}}</td>  \\n    <td><a (click)=\\\"edit(kk)\\\" style=\\\"color:blueviolet\\\">Edit</a></td>  \\n    <td><a (click)=\\\"delete(kk._id)\\\" style=\\\"color:blueviolet\\\">Delete</a>  </td>  \\n  </tr>  \\n</table>   -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nimport { FormGroup, FormControl, Validators, FormsModule } from '@angular/forms';\n\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\n\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css']\n})\nexport class UserInfoComponent implements OnInit {\n\n  constructor(private newService: CommonService){ }\n  Repdata;\n  valbutton = \"Save\";\n\n  ngOnInit() {\n  //   this.newService.getConsumer().subscribe(data => this.Repdata = data)\n  // }\n  // onSave = function(consumer, isValid: boolean) {\n  //   consumer.mode = this.valbutton;\n  //   this.newService.saveConsumer(consumer).subscribe(data => { alert(data.data);\n  //   this.ngOnInit();\n  //   },\n  //   error => this.errorMessage = error)\n  // }\n  // edit = function (kk) {\n  //   this.id = kk._id;\n  //   this.name = kk.name;\n  //   this.address = kk.address;\n  //   this.valbutton = \"Update\";\n  // }\n  // delete = function(id) {\n  //   this.newService.deleteConsumer(id).subscribe(data => { alert(data.data); this.ngOnInit();}, error => this.errorMessage = error)\n  }\n}\n","import { Cuisine } from './cuisine';\n\nexport const CUISINES: Cuisine[] = [\n    // {id: 1, name: 'American', imgLink: 'https://cdn.pixabay.com/photo/2012/04/14/15/37/cheeseburger-34314_1280.png '},\n    // {id: 2, name: 'BBQ', imgLink: 'https://cdn.pixabay.com/photo/2014/12/21/23/24/spare-ribs-575310_1280.png'},\n    // {id: 3, name: 'Italian', imgLink: 'https://cdn.pixabay.com/photo/2014/12/21/23/56/pasta-576417_1280.png'},\n    // {id: 4, name: 'Dessert', imgLink: 'https://cdn.pixabay.com/photo/2013/07/13/10/26/cake-157234_1280.png'},\n    // {id: 5, name: 'Asian', imgLink: 'https://cdn.pixabay.com/photo/2014/12/22/00/00/food-576547_1280.png'},\n    // {id: 5, name: 'Pizza', imgLink: 'https://cdn.pixabay.com/photo/2014/12/21/23/48/pizza-576085_1280.png'},\n    // {id: 5, name: 'Vegetarian', imgLink: 'https://cdn.pixabay.com/photo/2014/12/21/23/29/salad-575436_1280.png'},\n    {id: 1, name: 'American', imgLink: './assets/images/cuisineImages/'},\n    {id: 2, name: 'BBQ', imgLink: 'https://cdn.pixabay.com/photo/2014/12/21/23/24/spare-ribs-575310_1280.png'},\n    {id: 3, name: 'Italian', imgLink: 'https://cdn.pixabay.com/photo/2014/12/21/23/56/pasta-576417_1280.png'},\n    {id: 4, name: 'Dessert', imgLink: 'https://cdn.pixabay.com/photo/2013/07/13/10/26/cake-157234_1280.png'},\n    {id: 5, name: 'Asian', imgLink: 'https://cdn.pixabay.com/photo/2014/12/22/00/00/food-576547_1280.png'},\n    {id: 5, name: 'Pizza', imgLink: 'https://cdn.pixabay.com/photo/2014/12/21/23/48/pizza-576085_1280.png'},\n    {id: 5, name: 'Vegetarian', imgLink: 'https://cdn.pixabay.com/photo/2014/12/21/23/29/salad-575436_1280.png'},\n\n\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of} from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Truck } from './truck';\nimport { MessageService } from './message.service';\n\nimport { Cuisine } from './cuisine';\nimport { CUISINES } from './mock-cuisines';\n\n\n\n//import { TRUCKS } from './mock-trucks';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  \n  private trucksUrl = 'api/trucks';\n  \n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n    ) { };\n\n  /** GET trucks from the server */\n  getTrucks (): Observable<Truck[]> {\n    return this.http.get<Truck[]>(this.trucksUrl)\n      .pipe(\n        tap(trucks => this.log('fetched trucks')),\n        catchError(this.handleError('gettrucks', []))\n      );\n  }\n \n  /** GET Truck by id. Return `undefined` when id not found */\n  getTruckNo404<Data>(id: number): Observable<Truck> {\n    const url = `${this.trucksUrl}/?id=${id}`;\n    return this.http.get<Truck[]>(url)\n      .pipe(\n        map(trucks => trucks[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} Truck id=${id}`);\n        }),\n        catchError(this.handleError<Truck>(`getTruck id=${id}`))\n      );\n  }\n \n  /** GET Truck by id. Will 404 if id not found */\n  getTruck(id: number): Observable<Truck> {\n    const url = `${this.trucksUrl}/${id}`;\n    return this.http.get<Truck>(url).pipe(\n      tap(_ => this.log(`fetched Truck id=${id}`)),\n      catchError(this.handleError<Truck>(`getTruck id=${id}`))\n    );\n  }\n \n  /* GET trucks whose name contains search term */\n  searchtrucks(term: string): Observable<Truck[]> {\n    if (!term.trim()) {\n      // if not search term, return empty Truck array.\n      return of([]);\n    }\n    return this.http.get<Truck[]>(`${this.trucksUrl}/?name=${term}`).pipe(\n      tap(_ => this.log(`found trucks matching \"${term}\"`)),\n      catchError(this.handleError<Truck[]>('searchtrucks', []))\n    );\n  }\n \n  //////// Save methods //////////\n \n  /** POST: add a new Truck to the server */\n  addTruck (Truck: Truck): Observable<Truck> {\n    return this.http.post<Truck>(this.trucksUrl, Truck, httpOptions).pipe(\n      tap((Truck: Truck) => this.log(`added Truck w/ id=${Truck.id}`)),\n      catchError(this.handleError<Truck>('addTruck'))\n    );\n  }\n \n  /** DELETE: delete the Truck from the server */\n  deleteTruck (Truck: Truck | number): Observable<Truck> {\n    const id = typeof Truck === 'number' ? Truck : Truck.id;\n    const url = `${this.trucksUrl}/${id}`;\n \n    return this.http.delete<Truck>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted Truck id=${id}`)),\n      catchError(this.handleError<Truck>('deleteTruck'))\n    );\n  }\n \n  /** PUT: update the Truck on the server */\n  updateTruck (Truck: Truck): Observable<any> {\n    return this.http.put(this.trucksUrl, Truck, httpOptions).pipe(\n      tap(_ => this.log(`updated Truck id=${Truck.id}`)),\n      catchError(this.handleError<any>('updateTruck'))\n    );\n  }\n \n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n \n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n \n  /** Log a TruckService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`TruckService: ${message}`);\n  }\n\n  getCuisines(): Observable<Cuisine[]> {\n    return of (CUISINES);\n  }\n  getCuisine(id: number):\n  Observable<Cuisine> {\n    return of (CUISINES.find(cuisine => cuisine.id === id));\n  }\n  // getTrucks(): Observable<Truck[]> {\n  //   return this.http.get<Truck[]>(\n  //     this.trucksUrl, { observe: 'response'}\n  //   );\n\n    //return of (TRUCKS);\n  // }\n  // getTruck(id: number): Observable<Truck>{\n  //   return of (TRUCKS.find(truck => truck.id === id));\n  // }\n\n  \n}\n"],"sourceRoot":""}